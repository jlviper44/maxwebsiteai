// ../workers-shared/dist/asset-worker.mjs
import { WorkerEntrypoint as lo } from "cloudflare:workers";
var X = class {
  constructor(e) {
    this.performanceTimer = e;
  }
  now() {
    return this.performanceTimer ? this.performanceTimer.timeOrigin + this.performanceTimer.now() : Date.now();
  }
};
var Xt = Object.prototype.toString;
function Y(t14) {
  switch (Xt.call(t14)) {
    case "[object Error]":
    case "[object Exception]":
    case "[object DOMException]":
      return true;
    default:
      return M(t14, Error);
  }
}
function ot(t14, e) {
  return Xt.call(t14) === `[object ${e}]`;
}
function it(t14) {
  return ot(t14, "ErrorEvent");
}
function at(t14) {
  return ot(t14, "String");
}
function Q(t14) {
  return typeof t14 == "object" && t14 !== null && "__sentry_template_string__" in t14 && "__sentry_template_values__" in t14;
}
function Ce(t14) {
  return t14 === null || Q(t14) || typeof t14 != "object" && typeof t14 != "function";
}
function N(t14) {
  return ot(t14, "Object");
}
function ct(t14) {
  return typeof Event < "u" && M(t14, Event);
}
function ut(t14) {
  return typeof Element < "u" && M(t14, Element);
}
function D(t14) {
  return !!(t14 && t14.then && typeof t14.then == "function");
}
function lt(t14) {
  return N(t14) && "nativeEvent" in t14 && "preventDefault" in t14 && "stopPropagation" in t14;
}
function M(t14, e) {
  try {
    return t14 instanceof e;
  } catch {
    return false;
  }
}
function pt(t14) {
  return !!(typeof t14 == "object" && t14 !== null && (t14.__isVue || t14._isVue));
}
function k(t14, e = 0) {
  return typeof t14 != "string" || e === 0 || t14.length <= e ? t14 : `${t14.slice(0, e)}...`;
}
var L = "8.9.2";
var g = globalThis;
function ee(t14, e, n) {
  let r = n || g, s = r.__SENTRY__ = r.__SENTRY__ || {}, o = s[L] = s[L] || {};
  return o[t14] || (o[t14] = e());
}
var mr = g;
var gr = 80;
function Qt(t14, e = {}) {
  if (!t14) return "<unknown>";
  try {
    let n = t14, r = 5, s = [], o = 0, i = 0, a = " > ", c = a.length, u, l = Array.isArray(e) ? e : e.keyAttrs, p = !Array.isArray(e) && e.maxStringLength || gr;
    for (; n && o++ < r && (u = hr(n, l), !(u === "html" || o > 1 && i + s.length * c + u.length >= p)); ) s.push(u), i += u.length, n = n.parentNode;
    return s.reverse().join(a);
  } catch {
    return "<unknown>";
  }
}
function hr(t14, e) {
  let n = t14, r = [], s, o, i, a, c;
  if (!n || !n.tagName) return "";
  if (mr.HTMLElement && n instanceof HTMLElement && n.dataset) {
    if (n.dataset.sentryComponent) return n.dataset.sentryComponent;
    if (n.dataset.sentryElement) return n.dataset.sentryElement;
  }
  r.push(n.tagName.toLowerCase());
  let u = e && e.length ? e.filter((p) => n.getAttribute(p)).map((p) => [p, n.getAttribute(p)]) : null;
  if (u && u.length) u.forEach((p) => {
    r.push(`[${p[0]}="${p[1]}"]`);
  });
  else if (n.id && r.push(`#${n.id}`), s = n.className, s && at(s)) for (o = s.split(/\s+/), c = 0; c < o.length; c++) r.push(`.${o[c]}`);
  let l = ["aria-label", "type", "name", "title", "alt"];
  for (c = 0; c < l.length; c++) i = l[c], a = n.getAttribute(i), a && r.push(`[${i}="${a}"]`);
  return r.join("");
}
var F = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__;
var _r = "Sentry Logger ";
var dt = ["debug", "info", "warn", "error", "log", "assert", "trace"];
var ft = {};
function Ne(t14) {
  if (!("console" in g)) return t14();
  let e = g.console, n = {}, r = Object.keys(ft);
  r.forEach((s) => {
    let o = ft[s];
    n[s] = e[s], e[s] = o;
  });
  try {
    return t14();
  } finally {
    r.forEach((s) => {
      e[s] = n[s];
    });
  }
}
function Er() {
  let t14 = false, e = { enable: () => {
    t14 = true;
  }, disable: () => {
    t14 = false;
  }, isEnabled: () => t14 };
  return F ? dt.forEach((n) => {
    e[n] = (...r) => {
      t14 && Ne(() => {
        g.console[n](`${_r}[${n}]:`, ...r);
      });
    };
  }) : dt.forEach((n) => {
    e[n] = () => {
    };
  }), e;
}
var m = Er();
var Sr = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
function yr(t14) {
  return t14 === "http" || t14 === "https";
}
function U(t14, e = false) {
  let { host: n, path: r, pass: s, port: o, projectId: i, protocol: a, publicKey: c } = t14;
  return `${a}://${c}${e && s ? `:${s}` : ""}@${n}${o ? `:${o}` : ""}/${r && `${r}/`}${i}`;
}
function en(t14) {
  let e = Sr.exec(t14);
  if (!e) {
    Ne(() => {
      console.error(`Invalid Sentry Dsn: ${t14}`);
    });
    return;
  }
  let [n, r, s = "", o, i = "", a] = e.slice(1), c = "", u = a, l = u.split("/");
  if (l.length > 1 && (c = l.slice(0, -1).join("/"), u = l.pop()), u) {
    let p = u.match(/^\d+/);
    p && (u = p[0]);
  }
  return tn({ host: o, pass: s, path: c, projectId: u, port: i, protocol: n, publicKey: r });
}
function tn(t14) {
  return { protocol: t14.protocol, publicKey: t14.publicKey || "", pass: t14.pass || "", host: t14.host, port: t14.port || "", path: t14.path || "", projectId: t14.projectId };
}
function Tr(t14) {
  if (!F) return true;
  let { port: e, projectId: n, protocol: r } = t14;
  return ["protocol", "publicKey", "host", "projectId"].find((i) => t14[i] ? false : (m.error(`Invalid Sentry Dsn: ${i} missing`), true)) ? false : n.match(/^\d+$/) ? yr(r) ? e && isNaN(parseInt(e, 10)) ? (m.error(`Invalid Sentry Dsn: Invalid port ${e}`), false) : true : (m.error(`Invalid Sentry Dsn: Invalid protocol ${r}`), false) : (m.error(`Invalid Sentry Dsn: Invalid projectId ${n}`), false);
}
function Oe(t14) {
  let e = typeof t14 == "string" ? en(t14) : tn(t14);
  if (!(!e || !Tr(e))) return e;
}
var x = class extends Error {
  constructor(e, n = "warn") {
    super(e), this.message = e, this.name = new.target.prototype.constructor.name, Object.setPrototypeOf(this, new.target.prototype), this.logLevel = n;
  }
};
function z(t14, e, n) {
  try {
    Object.defineProperty(t14, e, { value: n, writable: true, configurable: true });
  } catch {
    F && m.log(`Failed to add non-enumerable property "${e}" to object`, t14);
  }
}
function gt(t14) {
  return Object.keys(t14).map((e) => `${encodeURIComponent(e)}=${encodeURIComponent(t14[e])}`).join("&");
}
function ve(t14) {
  if (Y(t14)) return { message: t14.message, name: t14.name, stack: t14.stack, ...rn(t14) };
  if (ct(t14)) {
    let e = { type: t14.type, target: nn(t14.target), currentTarget: nn(t14.currentTarget), ...rn(t14) };
    return typeof CustomEvent < "u" && M(t14, CustomEvent) && (e.detail = t14.detail), e;
  } else return t14;
}
function nn(t14) {
  try {
    return ut(t14) ? Qt(t14) : Object.prototype.toString.call(t14);
  } catch {
    return "<unknown>";
  }
}
function rn(t14) {
  if (typeof t14 == "object" && t14 !== null) {
    let e = {};
    for (let n in t14) Object.prototype.hasOwnProperty.call(t14, n) && (e[n] = t14[n]);
    return e;
  } else return {};
}
function ie(t14, e = 40) {
  let n = Object.keys(ve(t14));
  if (n.sort(), !n.length) return "[object has no keys]";
  if (n[0].length >= e) return k(n[0], e);
  for (let r = n.length; r > 0; r--) {
    let s = n.slice(0, r).join(", ");
    if (!(s.length > e)) return r === n.length ? s : k(s, e);
  }
  return "";
}
function S(t14) {
  return mt(t14, /* @__PURE__ */ new Map());
}
function mt(t14, e) {
  if (Ir(t14)) {
    let n = e.get(t14);
    if (n !== void 0) return n;
    let r = {};
    e.set(t14, r);
    for (let s of Object.keys(t14)) typeof t14[s] < "u" && (r[s] = mt(t14[s], e));
    return r;
  }
  if (Array.isArray(t14)) {
    let n = e.get(t14);
    if (n !== void 0) return n;
    let r = [];
    return e.set(t14, r), t14.forEach((s) => {
      r.push(mt(s, e));
    }), r;
  }
  return t14;
}
function Ir(t14) {
  if (!N(t14)) return false;
  try {
    let e = Object.getPrototypeOf(t14).constructor.name;
    return !e || e === "Object";
  } catch {
    return true;
  }
}
var we = "?";
var sn = /\(error: (.*)\)/;
var on = /captureMessage|captureException/;
function De(...t14) {
  let e = t14.sort((n, r) => n[0] - r[0]).map((n) => n[1]);
  return (n, r = 0, s = 0) => {
    let o = [], i = n.split(`
`);
    for (let a = r; a < i.length; a++) {
      let c = i[a];
      if (c.length > 1024) continue;
      let u = sn.test(c) ? c.replace(sn, "$1") : c;
      if (!u.match(/\S*Error: /)) {
        for (let l of e) {
          let p = l(u);
          if (p) {
            o.push(p);
            break;
          }
        }
        if (o.length >= 50 + s) break;
      }
    }
    return an(o.slice(s));
  };
}
function _t(t14) {
  return Array.isArray(t14) ? De(...t14) : t14;
}
function an(t14) {
  if (!t14.length) return [];
  let e = Array.from(t14);
  return /sentryWrapped/.test(e[e.length - 1].function || "") && e.pop(), e.reverse(), on.test(e[e.length - 1].function || "") && (e.pop(), on.test(e[e.length - 1].function || "") && e.pop()), e.slice(0, 50).map((n) => ({ ...n, filename: n.filename || e[e.length - 1].filename, function: n.function || we }));
}
var ht = "<anonymous>";
function ae(t14) {
  try {
    return !t14 || typeof t14 != "function" ? ht : t14.name || ht;
  } catch {
    return ht;
  }
}
var Me = {};
var cn = {};
function Pe(t14, e) {
  Me[t14] = Me[t14] || [], Me[t14].push(e);
}
function ke(t14, e) {
  cn[t14] || (e(), cn[t14] = true);
}
function Le(t14, e) {
  let n = t14 && Me[t14];
  if (n) for (let r of n) try {
    r(e);
  } catch (s) {
    F && m.error(`Error while triggering instrumentation handler.
Type: ${t14}
Name: ${ae(r)}
Error:`, s);
  }
}
var un = 1e3;
function te() {
  return Date.now() / un;
}
function Ar() {
  let { performance: t14 } = g;
  if (!t14 || !t14.now) return te;
  let e = Date.now() - t14.now(), n = t14.timeOrigin == null ? e : t14.timeOrigin;
  return () => (n + t14.now()) / un;
}
var ue = Ar();
var ce;
var xr = (() => {
  let { performance: t14 } = g;
  if (!t14 || !t14.now) {
    ce = "none";
    return;
  }
  let e = 3600 * 1e3, n = t14.now(), r = Date.now(), s = t14.timeOrigin ? Math.abs(t14.timeOrigin + n - r) : e, o = s < e, i = t14.timing && t14.timing.navigationStart, c = typeof i == "number" ? Math.abs(i + n - r) : e, u = c < e;
  return o || u ? s <= c ? (ce = "timeOrigin", t14.timeOrigin) : (ce = "navigationStart", i) : (ce = "dateNow", r);
})();
var Fe = null;
function Et(t14) {
  let e = "error";
  Pe(e, t14), ke(e, br);
}
function br() {
  Fe = g.onerror, g.onerror = function(t14, e, n, r, s) {
    return Le("error", { column: r, error: s, line: n, msg: t14, url: e }), Fe && !Fe.__SENTRY_LOADER__ ? Fe.apply(this, arguments) : false;
  }, g.onerror.__SENTRY_INSTRUMENTED__ = true;
}
var Ue = null;
function St(t14) {
  let e = "unhandledrejection";
  Pe(e, t14), ke(e, Rr);
}
function Rr() {
  Ue = g.onunhandledrejection, g.onunhandledrejection = function(t14) {
    return Le("unhandledrejection", t14), Ue && !Ue.__SENTRY_LOADER__ ? Ue.apply(this, arguments) : true;
  }, g.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;
}
function ln() {
  let t14 = typeof WeakSet == "function", e = t14 ? /* @__PURE__ */ new WeakSet() : [];
  function n(s) {
    if (t14) return e.has(s) ? true : (e.add(s), false);
    for (let o = 0; o < e.length; o++) if (e[o] === s) return true;
    return e.push(s), false;
  }
  function r(s) {
    if (t14) e.delete(s);
    else for (let o = 0; o < e.length; o++) if (e[o] === s) {
      e.splice(o, 1);
      break;
    }
  }
  return [n, r];
}
function A() {
  let t14 = g, e = t14.crypto || t14.msCrypto, n = () => Math.random() * 16;
  try {
    if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
    e && e.getRandomValues && (n = () => {
      let r = new Uint8Array(1);
      return e.getRandomValues(r), r[0];
    });
  } catch {
  }
  return ("10000000100040008000" + 1e11).replace(/[018]/g, (r) => (r ^ (n() & 15) >> r / 4).toString(16));
}
function Cr(t14) {
  return t14.exception && t14.exception.values ? t14.exception.values[0] : void 0;
}
function le(t14, e, n) {
  let r = t14.exception = t14.exception || {}, s = r.values = r.values || [], o = s[0] = s[0] || {};
  o.value || (o.value = e || ""), o.type || (o.type = n || "Error");
}
function J(t14, e) {
  let n = Cr(t14);
  if (!n) return;
  let r = { type: "generic", handled: true }, s = n.mechanism;
  if (n.mechanism = { ...r, ...s, ...e }, e && "data" in e) {
    let o = { ...s && s.data, ...e.data };
    n.mechanism.data = o;
  }
}
function $e(t14) {
  if (t14 && t14.__sentry_captured__) return true;
  try {
    z(t14, "__sentry_captured__", true);
  } catch {
  }
  return false;
}
function pe(t14) {
  return Array.isArray(t14) ? t14 : [t14];
}
function O(t14, e = 100, n = 1 / 0) {
  try {
    return yt("", t14, e, n);
  } catch (r) {
    return { ERROR: `**non-serializable** (${r})` };
  }
}
function ne(t14, e = 3, n = 100 * 1024) {
  let r = O(t14, e);
  return wr(r) > n ? ne(t14, e - 1, n) : r;
}
function yt(t14, e, n = 1 / 0, r = 1 / 0, s = ln()) {
  let [o, i] = s;
  if (e == null || ["number", "boolean", "string"].includes(typeof e) && !Number.isNaN(e)) return e;
  let a = Nr(t14, e);
  if (!a.startsWith("[object ")) return a;
  if (e.__sentry_skip_normalization__) return e;
  let c = typeof e.__sentry_override_normalization_depth__ == "number" ? e.__sentry_override_normalization_depth__ : n;
  if (c === 0) return a.replace("object ", "");
  if (o(e)) return "[Circular ~]";
  let u = e;
  if (u && typeof u.toJSON == "function") try {
    let d = u.toJSON();
    return yt("", d, c - 1, r, s);
  } catch {
  }
  let l = Array.isArray(e) ? [] : {}, p = 0, f = ve(e);
  for (let d in f) {
    if (!Object.prototype.hasOwnProperty.call(f, d)) continue;
    if (p >= r) {
      l[d] = "[MaxProperties ~]";
      break;
    }
    let h = f[d];
    l[d] = yt(d, h, c - 1, r, s), p++;
  }
  return i(e), l;
}
function Nr(t14, e) {
  try {
    if (t14 === "domain" && e && typeof e == "object" && e._events) return "[Domain]";
    if (t14 === "domainEmitter") return "[DomainEmitter]";
    if (typeof global < "u" && e === global) return "[Global]";
    if (typeof window < "u" && e === window) return "[Window]";
    if (typeof document < "u" && e === document) return "[Document]";
    if (pt(e)) return "[VueViewModel]";
    if (lt(e)) return "[SyntheticEvent]";
    if (typeof e == "number" && e !== e) return "[NaN]";
    if (typeof e == "function") return `[Function: ${ae(e)}]`;
    if (typeof e == "symbol") return `[${String(e)}]`;
    if (typeof e == "bigint") return `[BigInt: ${String(e)}]`;
    let n = Or(e);
    return /^HTML(\w*)Element$/.test(n) ? `[HTMLElement: ${n}]` : `[object ${n}]`;
  } catch (n) {
    return `**non-serializable** (${n})`;
  }
}
function Or(t14) {
  let e = Object.getPrototypeOf(t14);
  return e ? e.constructor.name : "null prototype";
}
function vr(t14) {
  return ~-encodeURI(t14).split(/%..|./).length;
}
function wr(t14) {
  return vr(JSON.stringify(t14));
}
function Dr(t14, e) {
  let n = 0;
  for (let r = t14.length - 1; r >= 0; r--) {
    let s = t14[r];
    s === "." ? t14.splice(r, 1) : s === ".." ? (t14.splice(r, 1), n++) : n && (t14.splice(r, 1), n--);
  }
  if (e) for (; n--; n) t14.unshift("..");
  return t14;
}
var Mr = /^(\S+:\\|\/?)([\s\S]*?)((?:\.{1,2}|[^/\\]+?|)(\.[^./\\]*|))(?:[/\\]*)$/;
function Pr(t14) {
  let e = t14.length > 1024 ? `<truncated>${t14.slice(-1024)}` : t14, n = Mr.exec(e);
  return n ? n.slice(1) : [];
}
function Tt(...t14) {
  let e = "", n = false;
  for (let r = t14.length - 1; r >= -1 && !n; r--) {
    let s = r >= 0 ? t14[r] : "/";
    s && (e = `${s}/${e}`, n = s.charAt(0) === "/");
  }
  return e = Dr(e.split("/").filter((r) => !!r), !n).join("/"), (n ? "/" : "") + e || ".";
}
function pn(t14) {
  let e = 0;
  for (; e < t14.length && t14[e] === ""; e++) ;
  let n = t14.length - 1;
  for (; n >= 0 && t14[n] === ""; n--) ;
  return e > n ? [] : t14.slice(e, n - e + 1);
}
function It(t14, e) {
  t14 = Tt(t14).slice(1), e = Tt(e).slice(1);
  let n = pn(t14.split("/")), r = pn(e.split("/")), s = Math.min(n.length, r.length), o = s;
  for (let a = 0; a < s; a++) if (n[a] !== r[a]) {
    o = a;
    break;
  }
  let i = [];
  for (let a = o; a < n.length; a++) i.push("..");
  return i = i.concat(r.slice(o)), i.join("/");
}
function de(t14, e) {
  let n = Pr(t14)[2];
  return e && n.slice(e.length * -1) === e && (n = n.slice(0, n.length - e.length)), n;
}
var P;
(function(t14) {
  t14[t14.PENDING = 0] = "PENDING";
  let n = 1;
  t14[t14.RESOLVED = n] = "RESOLVED";
  let r = 2;
  t14[t14.REJECTED = r] = "REJECTED";
})(P || (P = {}));
function b(t14) {
  return new v((e) => {
    e(t14);
  });
}
function V(t14) {
  return new v((e, n) => {
    n(t14);
  });
}
var v = class t {
  constructor(e) {
    t.prototype.__init.call(this), t.prototype.__init2.call(this), t.prototype.__init3.call(this), t.prototype.__init4.call(this), this._state = P.PENDING, this._handlers = [];
    try {
      e(this._resolve, this._reject);
    } catch (n) {
      this._reject(n);
    }
  }
  then(e, n) {
    return new t((r, s) => {
      this._handlers.push([false, (o) => {
        if (!e) r(o);
        else try {
          r(e(o));
        } catch (i) {
          s(i);
        }
      }, (o) => {
        if (!n) s(o);
        else try {
          r(n(o));
        } catch (i) {
          s(i);
        }
      }]), this._executeHandlers();
    });
  }
  catch(e) {
    return this.then((n) => n, e);
  }
  finally(e) {
    return new t((n, r) => {
      let s, o;
      return this.then((i) => {
        o = false, s = i, e && e();
      }, (i) => {
        o = true, s = i, e && e();
      }).then(() => {
        if (o) {
          r(s);
          return;
        }
        n(s);
      });
    });
  }
  __init() {
    this._resolve = (e) => {
      this._setResult(P.RESOLVED, e);
    };
  }
  __init2() {
    this._reject = (e) => {
      this._setResult(P.REJECTED, e);
    };
  }
  __init3() {
    this._setResult = (e, n) => {
      if (this._state === P.PENDING) {
        if (D(n)) {
          n.then(this._resolve, this._reject);
          return;
        }
        this._state = e, this._value = n, this._executeHandlers();
      }
    };
  }
  __init4() {
    this._executeHandlers = () => {
      if (this._state === P.PENDING) return;
      let e = this._handlers.slice();
      this._handlers = [], e.forEach((n) => {
        n[0] || (this._state === P.RESOLVED && n[1](this._value), this._state === P.REJECTED && n[2](this._value), n[0] = true);
      });
    };
  }
};
function At(t14) {
  let e = [];
  function n() {
    return t14 === void 0 || e.length < t14;
  }
  function r(i) {
    return e.splice(e.indexOf(i), 1)[0];
  }
  function s(i) {
    if (!n()) return V(new x("Not adding Promise because buffer limit was reached."));
    let a = i();
    return e.indexOf(a) === -1 && e.push(a), a.then(() => r(a)).then(null, () => r(a).then(null, () => {
    })), a;
  }
  function o(i) {
    return new v((a, c) => {
      let u = e.length;
      if (!u) return a(true);
      let l = setTimeout(() => {
        i && i > 0 && a(false);
      }, i);
      e.forEach((p) => {
        b(p).then(() => {
          --u || (clearTimeout(l), a(true));
        }, c);
      });
    });
  }
  return { $: e, add: s, drain: o };
}
function dn(t14, e = false) {
  return !(e || t14 && !t14.startsWith("/") && !t14.match(/^[A-Z]:/) && !t14.startsWith(".") && !t14.match(/^[a-zA-Z]([a-zA-Z0-9.\-+])*:\/\//)) && t14 !== void 0 && !t14.includes("node_modules/");
}
function fn(t14) {
  let e = /^\s*[-]{4,}$/, n = /at (?:async )?(?:(.+?)\s+\()?(?:(.+):(\d+):(\d+)?|([^)]+))\)?/;
  return (r) => {
    let s = r.match(n);
    if (s) {
      let o, i, a, c, u;
      if (s[1]) {
        a = s[1];
        let f = a.lastIndexOf(".");
        if (a[f - 1] === "." && f--, f > 0) {
          o = a.slice(0, f), i = a.slice(f + 1);
          let d = o.indexOf(".Module");
          d > 0 && (a = a.slice(d + 1), o = o.slice(0, d));
        }
        c = void 0;
      }
      i && (c = o, u = i), i === "<anonymous>" && (u = void 0, a = void 0), a === void 0 && (u = u || we, a = c ? `${c}.${u}` : u);
      let l = s[2] && s[2].startsWith("file://") ? s[2].slice(7) : s[2], p = s[5] === "native";
      return l && l.match(/\/[A-Z]:/) && (l = l.slice(1)), !l && s[5] && !p && (l = s[5]), { filename: l, module: t14 ? t14(l) : void 0, function: a, lineno: parseInt(s[3], 10) || void 0, colno: parseInt(s[4], 10) || void 0, in_app: dn(l, p) };
    }
    if (r.match(e)) return { filename: r };
  };
}
function xt(t14) {
  return [90, fn(t14)];
}
function $(t14, e = []) {
  return [t14, e];
}
function Rt(t14, e) {
  let [n, r] = t14;
  return [n, [...r, e]];
}
function Be(t14, e) {
  let n = t14[1];
  for (let r of n) {
    let s = r[0].type;
    if (e(r, s)) return true;
  }
  return false;
}
function bt(t14) {
  return g.__SENTRY__ && g.__SENTRY__.encodePolyfill ? g.__SENTRY__.encodePolyfill(t14) : new TextEncoder().encode(t14);
}
function Ct(t14) {
  let [e, n] = t14, r = JSON.stringify(e);
  function s(o) {
    typeof r == "string" ? r = typeof o == "string" ? r + o : [bt(r), o] : r.push(typeof o == "string" ? bt(o) : o);
  }
  for (let o of n) {
    let [i, a] = o;
    if (s(`
${JSON.stringify(i)}
`), typeof a == "string" || a instanceof Uint8Array) s(a);
    else {
      let c;
      try {
        c = JSON.stringify(a);
      } catch {
        c = JSON.stringify(O(a));
      }
      s(c);
    }
  }
  return typeof r == "string" ? r : kr(r);
}
function kr(t14) {
  let e = t14.reduce((s, o) => s + o.length, 0), n = new Uint8Array(e), r = 0;
  for (let s of t14) n.set(s, r), r += s.length;
  return n;
}
function Nt(t14) {
  let e = typeof t14.data == "string" ? bt(t14.data) : t14.data;
  return [S({ type: "attachment", length: e.length, filename: t14.filename, content_type: t14.contentType, attachment_type: t14.attachmentType }), e];
}
var Lr = { session: "session", sessions: "session", attachment: "attachment", transaction: "transaction", event: "error", client_report: "internal", user_report: "default", profile: "profile", profile_chunk: "profile", replay_event: "replay", replay_recording: "replay", check_in: "monitor", feedback: "feedback", span: "span", statsd: "metric_bucket" };
function He(t14) {
  return Lr[t14];
}
function je(t14) {
  if (!t14 || !t14.sdk) return;
  let { name: e, version: n } = t14.sdk;
  return { name: e, version: n };
}
function Ot(t14, e, n, r) {
  let s = t14.sdkProcessingMetadata && t14.sdkProcessingMetadata.dynamicSamplingContext;
  return { event_id: t14.event_id, sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...e && { sdk: e }, ...!!n && r && { dsn: U(r) }, ...s && { trace: S({ ...s }) } };
}
function mn(t14, e = Date.now()) {
  let n = parseInt(`${t14}`, 10);
  if (!isNaN(n)) return n * 1e3;
  let r = Date.parse(`${t14}`);
  return isNaN(r) ? 6e4 : r - e;
}
function gn(t14, e) {
  return t14[e] || t14.all || 0;
}
function vt(t14, e, n = Date.now()) {
  return gn(t14, e) > n;
}
function wt(t14, { statusCode: e, headers: n }, r = Date.now()) {
  let s = { ...t14 }, o = n && n["x-sentry-rate-limits"], i = n && n["retry-after"];
  if (o) for (let a of o.trim().split(",")) {
    let [c, u, , , l] = a.split(":", 5), p = parseInt(c, 10), f = (isNaN(p) ? 60 : p) * 1e3;
    if (!u) s.all = r + f;
    else for (let d of u.split(";")) d === "metric_bucket" ? (!l || l.split(";").includes("custom")) && (s[d] = r + f) : s[d] = r + f;
  }
  else i ? s.all = r + mn(i, r) : e === 429 && (s.all = r + 60 * 1e3);
  return s;
}
function Dt(t14, e) {
  return t14(e.stack || "", 1);
}
function hn(t14, e) {
  let n = { type: e.name || e.constructor.name, value: e.message }, r = Dt(t14, e);
  return r.length && (n.stacktrace = { frames: r }), n;
}
function Fr(t14) {
  for (let e in t14) if (Object.prototype.hasOwnProperty.call(t14, e)) {
    let n = t14[e];
    if (n instanceof Error) return n;
  }
}
function Ur(t14) {
  if ("name" in t14 && typeof t14.name == "string") {
    let r = `'${t14.name}' captured as exception`;
    return "message" in t14 && typeof t14.message == "string" && (r += ` with message '${t14.message}'`), r;
  } else if ("message" in t14 && typeof t14.message == "string") return t14.message;
  let e = ie(t14);
  if (it(t14)) return `Event \`ErrorEvent\` captured as exception with message \`${t14.message}\``;
  let n = $r(t14);
  return `${n && n !== "Object" ? `'${n}'` : "Object"} captured as exception with keys: ${e}`;
}
function $r(t14) {
  try {
    let e = Object.getPrototypeOf(t14);
    return e ? e.constructor.name : void 0;
  } catch {
  }
}
function Br(t14, e, n, r) {
  if (Y(n)) return [n, void 0];
  if (e.synthetic = true, N(n)) {
    let o = t14 && t14.getOptions().normalizeDepth, i = { __serialized__: ne(n, o) }, a = Fr(n);
    if (a) return [a, i];
    let c = Ur(n), u = r && r.syntheticException || new Error(c);
    return u.message = c, [u, i];
  }
  let s = r && r.syntheticException || new Error(n);
  return s.message = `${n}`, [s, void 0];
}
function Mt(t14, e, n, r) {
  let o = r && r.data && r.data.mechanism || { handled: true, type: "generic" }, [i, a] = Br(t14, o, n, r), c = { exception: { values: [hn(e, i)] } };
  return a && (c.extra = a), le(c, void 0, void 0), J(c, o), { ...c, event_id: r && r.event_id };
}
function Pt(t14, e, n = "info", r, s) {
  let o = { event_id: r && r.event_id, level: n };
  if (s && r && r.syntheticException) {
    let i = Dt(t14, r.syntheticException);
    i.length && (o.exception = { values: [{ value: e, stacktrace: { frames: i } }] });
  }
  if (Q(e)) {
    let { __sentry_template_string__: i, __sentry_template_values__: a } = e;
    return o.logentry = { message: i, params: a }, o;
  }
  return o.message = e, o;
}
function Ge() {
  return { traceId: A(), spanId: A().substring(16) };
}
var _ = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__;
function B() {
  return fe(g), g;
}
function fe(t14) {
  let e = t14.__SENTRY__ = t14.__SENTRY__ || {};
  return e.version = e.version || L, e[L] = e[L] || {};
}
function me(t14, e = {}) {
  if (e.user && (!t14.ipAddress && e.user.ip_address && (t14.ipAddress = e.user.ip_address), !t14.did && !e.did && (t14.did = e.user.id || e.user.email || e.user.username)), t14.timestamp = e.timestamp || ue(), e.abnormal_mechanism && (t14.abnormal_mechanism = e.abnormal_mechanism), e.ignoreDuration && (t14.ignoreDuration = e.ignoreDuration), e.sid && (t14.sid = e.sid.length === 32 ? e.sid : A()), e.init !== void 0 && (t14.init = e.init), !t14.did && e.did && (t14.did = `${e.did}`), typeof e.started == "number" && (t14.started = e.started), t14.ignoreDuration) t14.duration = void 0;
  else if (typeof e.duration == "number") t14.duration = e.duration;
  else {
    let n = t14.timestamp - t14.started;
    t14.duration = n >= 0 ? n : 0;
  }
  e.release && (t14.release = e.release), e.environment && (t14.environment = e.environment), !t14.ipAddress && e.ipAddress && (t14.ipAddress = e.ipAddress), !t14.userAgent && e.userAgent && (t14.userAgent = e.userAgent), typeof e.errors == "number" && (t14.errors = e.errors), e.status && (t14.status = e.status);
}
var kt = "_sentrySpan";
function Lt(t14, e) {
  e ? z(t14, kt, e) : delete t14[kt];
}
function q(t14) {
  return t14[kt];
}
var jr = 100;
var Ft = class t2 {
  constructor() {
    this._notifyingListeners = false, this._scopeListeners = [], this._eventProcessors = [], this._breadcrumbs = [], this._attachments = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}, this._sdkProcessingMetadata = {}, this._propagationContext = Ge();
  }
  clone() {
    let e = new t2();
    return e._breadcrumbs = [...this._breadcrumbs], e._tags = { ...this._tags }, e._extra = { ...this._extra }, e._contexts = { ...this._contexts }, e._user = this._user, e._level = this._level, e._session = this._session, e._transactionName = this._transactionName, e._fingerprint = this._fingerprint, e._eventProcessors = [...this._eventProcessors], e._requestSession = this._requestSession, e._attachments = [...this._attachments], e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }, e._propagationContext = { ...this._propagationContext }, e._client = this._client, e._lastEventId = this._lastEventId, Lt(e, q(this)), e;
  }
  setClient(e) {
    this._client = e;
  }
  setLastEventId(e) {
    this._lastEventId = e;
  }
  getClient() {
    return this._client;
  }
  lastEventId() {
    return this._lastEventId;
  }
  addScopeListener(e) {
    this._scopeListeners.push(e);
  }
  addEventProcessor(e) {
    return this._eventProcessors.push(e), this;
  }
  setUser(e) {
    return this._user = e || { email: void 0, id: void 0, ip_address: void 0, username: void 0 }, this._session && me(this._session, { user: e }), this._notifyScopeListeners(), this;
  }
  getUser() {
    return this._user;
  }
  getRequestSession() {
    return this._requestSession;
  }
  setRequestSession(e) {
    return this._requestSession = e, this;
  }
  setTags(e) {
    return this._tags = { ...this._tags, ...e }, this._notifyScopeListeners(), this;
  }
  setTag(e, n) {
    return this._tags = { ...this._tags, [e]: n }, this._notifyScopeListeners(), this;
  }
  setExtras(e) {
    return this._extra = { ...this._extra, ...e }, this._notifyScopeListeners(), this;
  }
  setExtra(e, n) {
    return this._extra = { ...this._extra, [e]: n }, this._notifyScopeListeners(), this;
  }
  setFingerprint(e) {
    return this._fingerprint = e, this._notifyScopeListeners(), this;
  }
  setLevel(e) {
    return this._level = e, this._notifyScopeListeners(), this;
  }
  setTransactionName(e) {
    return this._transactionName = e, this._notifyScopeListeners(), this;
  }
  setContext(e, n) {
    return n === null ? delete this._contexts[e] : this._contexts[e] = n, this._notifyScopeListeners(), this;
  }
  setSession(e) {
    return e ? this._session = e : delete this._session, this._notifyScopeListeners(), this;
  }
  getSession() {
    return this._session;
  }
  update(e) {
    if (!e) return this;
    let n = typeof e == "function" ? e(this) : e, [r, s] = n instanceof R ? [n.getScopeData(), n.getRequestSession()] : N(n) ? [e, e.requestSession] : [], { tags: o, extra: i, user: a, contexts: c, level: u, fingerprint: l = [], propagationContext: p } = r || {};
    return this._tags = { ...this._tags, ...o }, this._extra = { ...this._extra, ...i }, this._contexts = { ...this._contexts, ...c }, a && Object.keys(a).length && (this._user = a), u && (this._level = u), l.length && (this._fingerprint = l), p && (this._propagationContext = p), s && (this._requestSession = s), this;
  }
  clear() {
    return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, this._requestSession = void 0, this._session = void 0, Lt(this, void 0), this._attachments = [], this._propagationContext = Ge(), this._notifyScopeListeners(), this;
  }
  addBreadcrumb(e, n) {
    let r = typeof n == "number" ? n : jr;
    if (r <= 0) return this;
    let s = { timestamp: te(), ...e }, o = this._breadcrumbs;
    return o.push(s), this._breadcrumbs = o.length > r ? o.slice(-r) : o, this._notifyScopeListeners(), this;
  }
  getLastBreadcrumb() {
    return this._breadcrumbs[this._breadcrumbs.length - 1];
  }
  clearBreadcrumbs() {
    return this._breadcrumbs = [], this._notifyScopeListeners(), this;
  }
  addAttachment(e) {
    return this._attachments.push(e), this;
  }
  clearAttachments() {
    return this._attachments = [], this;
  }
  getScopeData() {
    return { breadcrumbs: this._breadcrumbs, attachments: this._attachments, contexts: this._contexts, tags: this._tags, extra: this._extra, user: this._user, level: this._level, fingerprint: this._fingerprint || [], eventProcessors: this._eventProcessors, propagationContext: this._propagationContext, sdkProcessingMetadata: this._sdkProcessingMetadata, transactionName: this._transactionName, span: q(this) };
  }
  setSDKProcessingMetadata(e) {
    return this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...e }, this;
  }
  setPropagationContext(e) {
    return this._propagationContext = e, this;
  }
  getPropagationContext() {
    return this._propagationContext;
  }
  captureException(e, n) {
    let r = n && n.event_id ? n.event_id : A();
    if (!this._client) return m.warn("No client configured on scope - will not capture exception!"), r;
    let s = new Error("Sentry syntheticException");
    return this._client.captureException(e, { originalException: e, syntheticException: s, ...n, event_id: r }, this), r;
  }
  captureMessage(e, n, r) {
    let s = r && r.event_id ? r.event_id : A();
    if (!this._client) return m.warn("No client configured on scope - will not capture message!"), s;
    let o = new Error(e);
    return this._client.captureMessage(e, n, { originalException: e, syntheticException: o, ...r, event_id: s }, this), s;
  }
  captureEvent(e, n) {
    let r = n && n.event_id ? n.event_id : A();
    return this._client ? (this._client.captureEvent(e, { ...n, event_id: r }, this), r) : (m.warn("No client configured on scope - will not capture event!"), r);
  }
  _notifyScopeListeners() {
    this._notifyingListeners || (this._notifyingListeners = true, this._scopeListeners.forEach((e) => {
      e(this);
    }), this._notifyingListeners = false);
  }
};
var R = Ft;
function _n() {
  return ee("defaultCurrentScope", () => new R());
}
function En() {
  return ee("defaultIsolationScope", () => new R());
}
var Ut = class {
  constructor(e, n) {
    let r;
    e ? r = e : r = new R();
    let s;
    n ? s = n : s = new R(), this._stack = [{ scope: r }], this._isolationScope = s;
  }
  withScope(e) {
    let n = this._pushScope(), r;
    try {
      r = e(n);
    } catch (s) {
      throw this._popScope(), s;
    }
    return D(r) ? r.then((s) => (this._popScope(), s), (s) => {
      throw this._popScope(), s;
    }) : (this._popScope(), r);
  }
  getClient() {
    return this.getStackTop().client;
  }
  getScope() {
    return this.getStackTop().scope;
  }
  getIsolationScope() {
    return this._isolationScope;
  }
  getStack() {
    return this._stack;
  }
  getStackTop() {
    return this._stack[this._stack.length - 1];
  }
  _pushScope() {
    let e = this.getScope().clone();
    return this.getStack().push({ client: this.getClient(), scope: e }), e;
  }
  _popScope() {
    return this.getStack().length <= 1 ? false : !!this.getStack().pop();
  }
};
function re() {
  let t14 = B(), e = fe(t14);
  return e.stack = e.stack || new Ut(_n(), En());
}
function Gr(t14) {
  return re().withScope(t14);
}
function Yr(t14, e) {
  let n = re();
  return n.withScope(() => (n.getStackTop().scope = t14, e(t14)));
}
function Sn(t14) {
  return re().withScope(() => t14(re().getIsolationScope()));
}
function yn() {
  return { withIsolationScope: Sn, withScope: Gr, withSetScope: Yr, withSetIsolationScope: (t14, e) => Sn(e), getCurrentScope: () => re().getScope(), getIsolationScope: () => re().getIsolationScope() };
}
function ge(t14) {
  let e = fe(t14);
  return e.acs ? e.acs : yn();
}
function $t() {
  let t14 = B();
  return ge(t14).getCurrentScope();
}
function W() {
  let t14 = B();
  return ge(t14).getIsolationScope();
}
function Tn() {
  return ee("globalScope", () => new R());
}
function In() {
  return $t().getClient();
}
var zr = "_sentryMetrics";
function An(t14) {
  let e = t14[zr];
  if (!e) return;
  let n = {};
  for (let [, [r, s]] of e) n[r] || (n[r] = []), n[r].push(S(s));
  return n;
}
var xn = "sentry.source";
var bn = "sentry.sample_rate";
var Rn = "sentry.op";
var Cn = "sentry.origin";
var Jr = 1;
function Ye(t14) {
  let { spanId: e, traceId: n } = t14.spanContext(), { parent_span_id: r } = se(t14);
  return S({ parent_span_id: r, span_id: e, trace_id: n });
}
function Nn(t14) {
  return typeof t14 == "number" ? On(t14) : Array.isArray(t14) ? t14[0] + t14[1] / 1e9 : t14 instanceof Date ? On(t14.getTime()) : ue();
}
function On(t14) {
  return t14 > 9999999999 ? t14 / 1e3 : t14;
}
function se(t14) {
  if (qr(t14)) return t14.getSpanJSON();
  try {
    let { spanId: e, traceId: n } = t14.spanContext();
    if (Vr(t14)) {
      let { attributes: r, startTime: s, name: o, endTime: i, parentSpanId: a, status: c } = t14;
      return S({ span_id: e, trace_id: n, data: r, description: o, parent_span_id: a, start_timestamp: Nn(s), timestamp: Nn(i) || void 0, status: Wr(c), op: r[Rn], origin: r[Cn], _metrics_summary: An(t14) });
    }
    return { span_id: e, trace_id: n };
  } catch {
    return {};
  }
}
function Vr(t14) {
  let e = t14;
  return !!e.attributes && !!e.startTime && !!e.name && !!e.endTime && !!e.status;
}
function qr(t14) {
  return typeof t14.getSpanJSON == "function";
}
function vn(t14) {
  let { traceFlags: e } = t14.spanContext();
  return e === Jr;
}
function Wr(t14) {
  if (!(!t14 || t14.code === 0)) return t14.code === 1 ? "ok" : t14.message || "unknown_error";
}
var Kr = "_sentryRootSpan";
function H(t14) {
  return t14[Kr] || t14;
}
function wn() {
  let t14 = B(), e = ge(t14);
  return e.getActiveSpan ? e.getActiveSpan() : q($t());
}
var Dn = false;
function Mn() {
  Dn || (Dn = true, Et(Bt), St(Bt));
}
function Bt() {
  let t14 = wn(), e = t14 && H(t14);
  if (e) {
    let n = "internal_error";
    _ && m.log(`[Tracing] Root span: ${n} -> Global error occured`), e.setStatus({ code: 2, message: n });
  }
}
Bt.tag = "sentry_tracingErrorCallback";
var ze = "production";
var Zr = "_frozenDsc";
function he(t14, e) {
  let n = e.getOptions(), { publicKey: r } = e.getDsn() || {}, s = S({ environment: n.environment || ze, release: n.release, public_key: r, trace_id: t14 });
  return e.emit("createDsc", s), s;
}
function Je(t14) {
  let e = In();
  if (!e) return {};
  let n = he(se(t14).trace_id || "", e), r = H(t14);
  if (!r) return n;
  let s = r[Zr];
  if (s) return s;
  let o = se(r), i = o.data || {}, a = i[bn];
  a != null && (n.sample_rate = `${a}`);
  let c = i[xn];
  return c && c !== "url" && (n.transaction = o.description), n.sampled = String(vn(r)), e.emit("createDsc", n), n;
}
function Pn(t14) {
  if (typeof t14 == "boolean") return Number(t14);
  let e = typeof t14 == "string" ? parseFloat(t14) : t14;
  if (typeof e != "number" || isNaN(e) || e < 0 || e > 1) {
    _ && m.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(t14)} of type ${JSON.stringify(typeof t14)}.`);
    return;
  }
  return e;
}
function Xr(t14, e) {
  return e && (t14.sdk = t14.sdk || {}, t14.sdk.name = t14.sdk.name || e.name, t14.sdk.version = t14.sdk.version || e.version, t14.sdk.integrations = [...t14.sdk.integrations || [], ...e.integrations || []], t14.sdk.packages = [...t14.sdk.packages || [], ...e.packages || []]), t14;
}
function kn(t14, e, n, r) {
  let s = je(n), o = { sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...s && { sdk: s }, ...!!r && e && { dsn: U(e) } }, i = "aggregates" in t14 ? [{ type: "sessions" }, t14] : [{ type: "session" }, t14.toJSON()];
  return $(o, [i]);
}
function Ln(t14, e, n, r) {
  let s = je(n), o = t14.type && t14.type !== "replay_event" ? t14.type : "event";
  Xr(t14, n && n.sdk);
  let i = Ot(t14, s, r, e);
  return delete t14.sdkProcessingMetadata, $(i, [[{ type: o }, t14]]);
}
function Ve(t14, e, n, r = 0) {
  return new v((s, o) => {
    let i = t14[r];
    if (e === null || typeof i != "function") s(e);
    else {
      let a = i({ ...e }, n);
      _ && i.id && a === null && m.log(`Event processor "${i.id}" dropped event`), D(a) ? a.then((c) => Ve(t14, c, n, r + 1).then(s)).then(null, o) : Ve(t14, a, n, r + 1).then(s).then(null, o);
    }
  });
}
function Fn(t14, e) {
  let { fingerprint: n, span: r, breadcrumbs: s, sdkProcessingMetadata: o } = e;
  Qr(t14, e), r && ns(t14, r), rs(t14, n), es(t14, s), ts(t14, o);
}
function Ht(t14, e) {
  let { extra: n, tags: r, user: s, contexts: o, level: i, sdkProcessingMetadata: a, breadcrumbs: c, fingerprint: u, eventProcessors: l, attachments: p, propagationContext: f, transactionName: d, span: h } = e;
  _e(t14, "extra", n), _e(t14, "tags", r), _e(t14, "user", s), _e(t14, "contexts", o), _e(t14, "sdkProcessingMetadata", a), i && (t14.level = i), d && (t14.transactionName = d), h && (t14.span = h), c.length && (t14.breadcrumbs = [...t14.breadcrumbs, ...c]), u.length && (t14.fingerprint = [...t14.fingerprint, ...u]), l.length && (t14.eventProcessors = [...t14.eventProcessors, ...l]), p.length && (t14.attachments = [...t14.attachments, ...p]), t14.propagationContext = { ...t14.propagationContext, ...f };
}
function _e(t14, e, n) {
  if (n && Object.keys(n).length) {
    t14[e] = { ...t14[e] };
    for (let r in n) Object.prototype.hasOwnProperty.call(n, r) && (t14[e][r] = n[r]);
  }
}
function Qr(t14, e) {
  let { extra: n, tags: r, user: s, contexts: o, level: i, transactionName: a } = e, c = S(n);
  c && Object.keys(c).length && (t14.extra = { ...c, ...t14.extra });
  let u = S(r);
  u && Object.keys(u).length && (t14.tags = { ...u, ...t14.tags });
  let l = S(s);
  l && Object.keys(l).length && (t14.user = { ...l, ...t14.user });
  let p = S(o);
  p && Object.keys(p).length && (t14.contexts = { ...p, ...t14.contexts }), i && (t14.level = i), a && t14.type !== "transaction" && (t14.transaction = a);
}
function es(t14, e) {
  let n = [...t14.breadcrumbs || [], ...e];
  t14.breadcrumbs = n.length ? n : void 0;
}
function ts(t14, e) {
  t14.sdkProcessingMetadata = { ...t14.sdkProcessingMetadata, ...e };
}
function ns(t14, e) {
  t14.contexts = { trace: Ye(e), ...t14.contexts }, t14.sdkProcessingMetadata = { dynamicSamplingContext: Je(e), ...t14.sdkProcessingMetadata };
  let n = H(e), r = se(n).description;
  r && !t14.transaction && t14.type === "transaction" && (t14.transaction = r);
}
function rs(t14, e) {
  t14.fingerprint = t14.fingerprint ? pe(t14.fingerprint) : [], e && (t14.fingerprint = t14.fingerprint.concat(e)), t14.fingerprint && !t14.fingerprint.length && delete t14.fingerprint;
}
function $n(t14, e, n, r, s, o) {
  let { normalizeDepth: i = 3, normalizeMaxBreadth: a = 1e3 } = t14, c = { ...e, event_id: e.event_id || n.event_id || A(), timestamp: e.timestamp || te() }, u = n.integrations || t14.integrations.map((T) => T.name);
  ss(c, t14), as(c, u), e.type === void 0 && os(c, t14.stackParser);
  let l = us(r, n.captureContext);
  n.mechanism && J(c, n.mechanism);
  let p = s ? s.getEventProcessors() : [], f = Tn().getScopeData();
  if (o) {
    let T = o.getScopeData();
    Ht(f, T);
  }
  if (l) {
    let T = l.getScopeData();
    Ht(f, T);
  }
  let d = [...n.attachments || [], ...f.attachments];
  d.length && (n.attachments = d), Fn(c, f);
  let h = [...p, ...f.eventProcessors];
  return Ve(h, c, n).then((T) => (T && is(T), typeof i == "number" && i > 0 ? cs(T, i, a) : T));
}
function ss(t14, e) {
  let { environment: n, release: r, dist: s, maxValueLength: o = 250 } = e;
  "environment" in t14 || (t14.environment = "environment" in e ? n : ze), t14.release === void 0 && r !== void 0 && (t14.release = r), t14.dist === void 0 && s !== void 0 && (t14.dist = s), t14.message && (t14.message = k(t14.message, o));
  let i = t14.exception && t14.exception.values && t14.exception.values[0];
  i && i.value && (i.value = k(i.value, o));
  let a = t14.request;
  a && a.url && (a.url = k(a.url, o));
}
var Un = /* @__PURE__ */ new WeakMap();
function os(t14, e) {
  let n = g._sentryDebugIds;
  if (!n) return;
  let r, s = Un.get(e);
  s ? r = s : (r = /* @__PURE__ */ new Map(), Un.set(e, r));
  let o = Object.keys(n).reduce((i, a) => {
    let c, u = r.get(a);
    u ? c = u : (c = e(a), r.set(a, c));
    for (let l = c.length - 1; l >= 0; l--) {
      let p = c[l];
      if (p.filename) {
        i[p.filename] = n[a];
        break;
      }
    }
    return i;
  }, {});
  try {
    t14.exception.values.forEach((i) => {
      i.stacktrace.frames.forEach((a) => {
        a.filename && (a.debug_id = o[a.filename]);
      });
    });
  } catch {
  }
}
function is(t14) {
  let e = {};
  try {
    t14.exception.values.forEach((r) => {
      r.stacktrace.frames.forEach((s) => {
        s.debug_id && (s.abs_path ? e[s.abs_path] = s.debug_id : s.filename && (e[s.filename] = s.debug_id), delete s.debug_id);
      });
    });
  } catch {
  }
  if (Object.keys(e).length === 0) return;
  t14.debug_meta = t14.debug_meta || {}, t14.debug_meta.images = t14.debug_meta.images || [];
  let n = t14.debug_meta.images;
  Object.keys(e).forEach((r) => {
    n.push({ type: "sourcemap", code_file: r, debug_id: e[r] });
  });
}
function as(t14, e) {
  e.length > 0 && (t14.sdk = t14.sdk || {}, t14.sdk.integrations = [...t14.sdk.integrations || [], ...e]);
}
function cs(t14, e, n) {
  if (!t14) return null;
  let r = { ...t14, ...t14.breadcrumbs && { breadcrumbs: t14.breadcrumbs.map((s) => ({ ...s, ...s.data && { data: O(s.data, e, n) } })) }, ...t14.user && { user: O(t14.user, e, n) }, ...t14.contexts && { contexts: O(t14.contexts, e, n) }, ...t14.extra && { extra: O(t14.extra, e, n) } };
  return t14.contexts && t14.contexts.trace && r.contexts && (r.contexts.trace = t14.contexts.trace, t14.contexts.trace.data && (r.contexts.trace.data = O(t14.contexts.trace.data, e, n))), t14.spans && (r.spans = t14.spans.map((s) => ({ ...s, ...s.data && { data: O(s.data, e, n) } }))), r;
}
function us(t14, e) {
  if (!e) return t14;
  let n = t14 ? t14.clone() : new R();
  return n.update(e), n;
}
var qe = class {
  constructor(e, n) {
    this._client = e, this.flushTimeout = 60, this._pendingAggregates = {}, this._isEnabled = true, this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1e3), this._intervalId.unref && this._intervalId.unref(), this._sessionAttrs = n;
  }
  flush() {
    let e = this.getSessionAggregates();
    e.aggregates.length !== 0 && (this._pendingAggregates = {}, this._client.sendSession(e));
  }
  getSessionAggregates() {
    let e = Object.keys(this._pendingAggregates).map((r) => this._pendingAggregates[parseInt(r)]), n = { attrs: this._sessionAttrs, aggregates: e };
    return S(n);
  }
  close() {
    clearInterval(this._intervalId), this._isEnabled = false, this.flush();
  }
  incrementSessionStatusCount() {
    if (!this._isEnabled) return;
    let e = W(), n = e.getRequestSession();
    n && n.status && (this._incrementSessionStatusCount(n.status, /* @__PURE__ */ new Date()), e.setRequestSession(void 0));
  }
  _incrementSessionStatusCount(e, n) {
    let r = new Date(n).setSeconds(0, 0);
    this._pendingAggregates[r] = this._pendingAggregates[r] || {};
    let s = this._pendingAggregates[r];
    switch (s.started || (s.started = new Date(r).toISOString()), e) {
      case "errored":
        return s.errored = (s.errored || 0) + 1, s.errored;
      case "ok":
        return s.exited = (s.exited || 0) + 1, s.exited;
      default:
        return s.crashed = (s.crashed || 0) + 1, s.crashed;
    }
  }
};
var ls = "7";
function ps(t14) {
  let e = t14.protocol ? `${t14.protocol}:` : "", n = t14.port ? `:${t14.port}` : "";
  return `${e}//${t14.host}${n}${t14.path ? `/${t14.path}` : ""}/api/`;
}
function ds(t14) {
  return `${ps(t14)}${t14.projectId}/envelope/`;
}
function fs(t14, e) {
  return gt({ sentry_key: t14.publicKey, sentry_version: ls, ...e && { sentry_client: `${e.name}/${e.version}` } });
}
function Bn(t14, e, n) {
  return e || `${ds(t14)}?${fs(t14, n)}`;
}
var Hn = [];
function ms(t14) {
  let e = {};
  return t14.forEach((n) => {
    let { name: r } = n, s = e[r];
    s && !s.isDefaultInstance && n.isDefaultInstance || (e[r] = n);
  }), Object.keys(e).map((n) => e[n]);
}
function jt(t14) {
  let e = t14.defaultIntegrations || [], n = t14.integrations;
  e.forEach((i) => {
    i.isDefaultInstance = true;
  });
  let r;
  Array.isArray(n) ? r = [...e, ...n] : typeof n == "function" ? r = pe(n(e)) : r = e;
  let s = ms(r), o = gs(s, (i) => i.name === "Debug");
  if (o !== -1) {
    let [i] = s.splice(o, 1);
    s.push(i);
  }
  return s;
}
function jn(t14, e) {
  let n = {};
  return e.forEach((r) => {
    r && Yt(t14, r, n);
  }), n;
}
function Gt(t14, e) {
  for (let n of e) n && n.afterAllSetup && n.afterAllSetup(t14);
}
function Yt(t14, e, n) {
  if (n[e.name]) {
    _ && m.log(`Integration skipped because it was already installed: ${e.name}`);
    return;
  }
  if (n[e.name] = e, Hn.indexOf(e.name) === -1 && typeof e.setupOnce == "function" && (e.setupOnce(), Hn.push(e.name)), e.setup && typeof e.setup == "function" && e.setup(t14), typeof e.preprocessEvent == "function") {
    let r = e.preprocessEvent.bind(e);
    t14.on("preprocessEvent", (s, o) => r(s, o, t14));
  }
  if (typeof e.processEvent == "function") {
    let r = e.processEvent.bind(e), s = Object.assign((o, i) => r(o, i, t14), { id: e.name });
    t14.addEventProcessor(s);
  }
  _ && m.log(`Integration installed: ${e.name}`);
}
function gs(t14, e) {
  for (let n = 0; n < t14.length; n++) if (e(t14[n]) === true) return n;
  return -1;
}
var Gn = "Not capturing exception because it's already been captured.";
var We = class {
  constructor(e) {
    if (this._options = e, this._integrations = {}, this._numProcessing = 0, this._outcomes = {}, this._hooks = {}, this._eventProcessors = [], e.dsn ? this._dsn = Oe(e.dsn) : _ && m.warn("No DSN provided, client will not send events."), this._dsn) {
      let n = Bn(this._dsn, e.tunnel, e._metadata ? e._metadata.sdk : void 0);
      this._transport = e.transport({ tunnel: this._options.tunnel, recordDroppedEvent: this.recordDroppedEvent.bind(this), ...e.transportOptions, url: n });
    }
  }
  captureException(e, n, r) {
    let s = A();
    if ($e(e)) return _ && m.log(Gn), s;
    let o = { event_id: s, ...n };
    return this._process(this.eventFromException(e, o).then((i) => this._captureEvent(i, o, r))), o.event_id;
  }
  captureMessage(e, n, r, s) {
    let o = { event_id: A(), ...r }, i = Q(e) ? e : String(e), a = Ce(e) ? this.eventFromMessage(i, n, o) : this.eventFromException(e, o);
    return this._process(a.then((c) => this._captureEvent(c, o, s))), o.event_id;
  }
  captureEvent(e, n, r) {
    let s = A();
    if (n && n.originalException && $e(n.originalException)) return _ && m.log(Gn), s;
    let o = { event_id: s, ...n }, a = (e.sdkProcessingMetadata || {}).capturedSpanScope;
    return this._process(this._captureEvent(e, o, a || r)), o.event_id;
  }
  captureSession(e) {
    typeof e.release != "string" ? _ && m.warn("Discarded session because of missing or non-string release") : (this.sendSession(e), me(e, { init: false }));
  }
  getDsn() {
    return this._dsn;
  }
  getOptions() {
    return this._options;
  }
  getSdkMetadata() {
    return this._options._metadata;
  }
  getTransport() {
    return this._transport;
  }
  flush(e) {
    let n = this._transport;
    return n ? (this.emit("flush"), this._isClientDoneProcessing(e).then((r) => n.flush(e).then((s) => r && s))) : b(true);
  }
  close(e) {
    return this.flush(e).then((n) => (this.getOptions().enabled = false, this.emit("close"), n));
  }
  getEventProcessors() {
    return this._eventProcessors;
  }
  addEventProcessor(e) {
    this._eventProcessors.push(e);
  }
  init() {
    this._isEnabled() && this._setupIntegrations();
  }
  getIntegrationByName(e) {
    return this._integrations[e];
  }
  addIntegration(e) {
    let n = this._integrations[e.name];
    Yt(this, e, this._integrations), n || Gt(this, [e]);
  }
  sendEvent(e, n = {}) {
    this.emit("beforeSendEvent", e, n);
    let r = Ln(e, this._dsn, this._options._metadata, this._options.tunnel);
    for (let o of n.attachments || []) r = Rt(r, Nt(o));
    let s = this.sendEnvelope(r);
    s && s.then((o) => this.emit("afterSendEvent", e, o), null);
  }
  sendSession(e) {
    let n = kn(e, this._dsn, this._options._metadata, this._options.tunnel);
    this.sendEnvelope(n);
  }
  recordDroppedEvent(e, n, r) {
    if (this._options.sendClientReports) {
      let s = `${e}:${n}`;
      _ && m.log(`Adding outcome: "${s}"`), this._outcomes[s] = this._outcomes[s] + 1 || 1;
    }
  }
  on(e, n) {
    this._hooks[e] || (this._hooks[e] = []), this._hooks[e].push(n);
  }
  emit(e, ...n) {
    this._hooks[e] && this._hooks[e].forEach((r) => r(...n));
  }
  sendEnvelope(e) {
    return this.emit("beforeEnvelope", e), this._isEnabled() && this._transport ? this._transport.send(e).then(null, (n) => (_ && m.error("Error while sending event:", n), n)) : (_ && m.error("Transport disabled"), b({}));
  }
  _setupIntegrations() {
    let { integrations: e } = this._options;
    this._integrations = jn(this, e), Gt(this, e);
  }
  _updateSessionFromEvent(e, n) {
    let r = false, s = false, o = n.exception && n.exception.values;
    if (o) {
      s = true;
      for (let c of o) {
        let u = c.mechanism;
        if (u && u.handled === false) {
          r = true;
          break;
        }
      }
    }
    let i = e.status === "ok";
    (i && e.errors === 0 || i && r) && (me(e, { ...r && { status: "crashed" }, errors: e.errors || Number(s || r) }), this.captureSession(e));
  }
  _isClientDoneProcessing(e) {
    return new v((n) => {
      let r = 0, s = 1, o = setInterval(() => {
        this._numProcessing == 0 ? (clearInterval(o), n(true)) : (r += s, e && r >= e && (clearInterval(o), n(false)));
      }, s);
    });
  }
  _isEnabled() {
    return this.getOptions().enabled !== false && this._transport !== void 0;
  }
  _prepareEvent(e, n, r, s = W()) {
    let o = this.getOptions(), i = Object.keys(this._integrations);
    return !n.integrations && i.length > 0 && (n.integrations = i), this.emit("preprocessEvent", e, n), e.type || s.setLastEventId(e.event_id || n.event_id), $n(o, e, n, r, this, s).then((a) => {
      if (a === null) return a;
      let c = { ...s.getPropagationContext(), ...r ? r.getPropagationContext() : void 0 };
      if (!(a.contexts && a.contexts.trace) && c) {
        let { traceId: l, spanId: p, parentSpanId: f, dsc: d } = c;
        a.contexts = { trace: S({ trace_id: l, span_id: p, parent_span_id: f }), ...a.contexts };
        let h = d || he(l, this);
        a.sdkProcessingMetadata = { dynamicSamplingContext: h, ...a.sdkProcessingMetadata };
      }
      return a;
    });
  }
  _captureEvent(e, n = {}, r) {
    return this._processEvent(e, n, r).then((s) => s.event_id, (s) => {
      if (_) {
        let o = s;
        o.logLevel === "log" ? m.log(o.message) : m.warn(o);
      }
    });
  }
  _processEvent(e, n, r) {
    let s = this.getOptions(), { sampleRate: o } = s, i = zn(e), a = Yn(e), c = e.type || "error", u = `before send for type \`${c}\``, l = typeof o > "u" ? void 0 : Pn(o);
    if (a && typeof l == "number" && Math.random() > l) return this.recordDroppedEvent("sample_rate", "error", e), V(new x(`Discarding event because it's not included in the random sample (sampling rate = ${o})`, "log"));
    let p = c === "replay_event" ? "replay" : c, d = (e.sdkProcessingMetadata || {}).capturedSpanIsolationScope;
    return this._prepareEvent(e, n, r, d).then((h) => {
      if (h === null) throw this.recordDroppedEvent("event_processor", p, e), new x("An event processor returned `null`, will not send event.", "log");
      if (n.data && n.data.__sentry__ === true) return h;
      let T = _s(s, h, n);
      return hs(T, u);
    }).then((h) => {
      if (h === null) throw this.recordDroppedEvent("before_send", p, e), new x(`${u} returned \`null\`, will not send event.`, "log");
      let Z = r && r.getSession();
      !i && Z && this._updateSessionFromEvent(Z, h);
      let T = h.transaction_info;
      if (i && T && h.transaction !== e.transaction) {
        let I = "custom";
        h.transaction_info = { ...T, source: I };
      }
      return this.sendEvent(h, n), h;
    }).then(null, (h) => {
      throw h instanceof x ? h : (this.captureException(h, { data: { __sentry__: true }, originalException: h }), new x(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${h}`));
    });
  }
  _process(e) {
    this._numProcessing++, e.then((n) => (this._numProcessing--, n), (n) => (this._numProcessing--, n));
  }
  _clearOutcomes() {
    let e = this._outcomes;
    return this._outcomes = {}, Object.keys(e).map((n) => {
      let [r, s] = n.split(":");
      return { reason: r, category: s, quantity: e[n] };
    });
  }
};
function hs(t14, e) {
  let n = `${e} must return \`null\` or a valid event.`;
  if (D(t14)) return t14.then((r) => {
    if (!N(r) && r !== null) throw new x(n);
    return r;
  }, (r) => {
    throw new x(`${e} rejected with ${r}`);
  });
  if (!N(t14) && t14 !== null) throw new x(n);
  return t14;
}
function _s(t14, e, n) {
  let { beforeSend: r, beforeSendTransaction: s, beforeSendSpan: o } = t14;
  if (Yn(e) && r) return r(e, n);
  if (zn(e)) {
    if (e.spans && o) {
      let i = [];
      for (let a of e.spans) {
        let c = o(a);
        c && i.push(c);
      }
      e.spans = i;
    }
    if (s) return s(e, n);
  }
  return e;
}
function Yn(t14) {
  return t14.type === void 0;
}
function zn(t14) {
  return t14.type === "transaction";
}
function Jn(t14, e, n, r, s) {
  let o = { sent_at: (/* @__PURE__ */ new Date()).toISOString() };
  n && n.sdk && (o.sdk = { name: n.sdk.name, version: n.sdk.version }), r && s && (o.dsn = U(s)), e && (o.trace = S(e));
  let i = Es(t14);
  return $(o, [i]);
}
function Es(t14) {
  return [{ type: "check_in" }, t14];
}
var Ee = class extends We {
  constructor(e) {
    Mn(), super(e);
  }
  eventFromException(e, n) {
    return b(Mt(this, this._options.stackParser, e, n));
  }
  eventFromMessage(e, n = "info", r) {
    return b(Pt(this._options.stackParser, e, n, r, this._options.attachStacktrace));
  }
  captureException(e, n, r) {
    if (this._options.autoSessionTracking && this._sessionFlusher) {
      let s = W().getRequestSession();
      s && s.status === "ok" && (s.status = "errored");
    }
    return super.captureException(e, n, r);
  }
  captureEvent(e, n, r) {
    if (this._options.autoSessionTracking && this._sessionFlusher && (e.type || "exception") === "exception" && e.exception && e.exception.values && e.exception.values.length > 0) {
      let i = W().getRequestSession();
      i && i.status === "ok" && (i.status = "errored");
    }
    return super.captureEvent(e, n, r);
  }
  close(e) {
    return this._sessionFlusher && this._sessionFlusher.close(), super.close(e);
  }
  initSessionFlusher() {
    let { release: e, environment: n } = this._options;
    e ? this._sessionFlusher = new qe(this, { release: e, environment: n }) : _ && m.warn("Cannot initialise an instance of SessionFlusher if no release is provided!");
  }
  captureCheckIn(e, n, r) {
    let s = "checkInId" in e && e.checkInId ? e.checkInId : A();
    if (!this._isEnabled()) return _ && m.warn("SDK not enabled, will not capture checkin."), s;
    let o = this.getOptions(), { release: i, environment: a, tunnel: c } = o, u = { check_in_id: s, monitor_slug: e.monitorSlug, status: e.status, release: i, environment: a };
    "duration" in e && (u.duration = e.duration), n && (u.monitor_config = { schedule: n.schedule, checkin_margin: n.checkinMargin, max_runtime: n.maxRuntime, timezone: n.timezone, failure_issue_threshold: n.failureIssueThreshold, recovery_threshold: n.recoveryThreshold });
    let [l, p] = this._getTraceInfoFromScope(r);
    p && (u.contexts = { trace: p });
    let f = Jn(u, l, this.getSdkMetadata(), c, this.getDsn());
    return _ && m.info("Sending checkin:", e.monitorSlug, e.status), this.sendEnvelope(f), s;
  }
  _captureRequestSession() {
    this._sessionFlusher ? this._sessionFlusher.incrementSessionStatusCount() : _ && m.warn("Discarded request mode session because autoSessionTracking option was disabled");
  }
  _prepareEvent(e, n, r, s) {
    return this._options.platform && (e.platform = e.platform || this._options.platform), this._options.runtime && (e.contexts = { ...e.contexts, runtime: (e.contexts || {}).runtime || this._options.runtime }), this._options.serverName && (e.server_name = e.server_name || this._options.serverName), super._prepareEvent(e, n, r, s);
  }
  _getTraceInfoFromScope(e) {
    if (!e) return [void 0, void 0];
    let n = q(e);
    if (n) {
      let c = H(n);
      return [Je(c), Ye(c)];
    }
    let { traceId: r, spanId: s, parentSpanId: o, dsc: i } = e.getPropagationContext(), a = { trace_id: r, span_id: s, parent_span_id: o };
    return i ? [i, a] : [he(r, this), a];
  }
};
var Ss = 64;
function zt(t14, e, n = At(t14.bufferSize || Ss)) {
  let r = {}, s = (i) => n.drain(i);
  function o(i) {
    let a = [];
    if (Be(i, (p, f) => {
      let d = He(f);
      if (vt(r, d)) {
        let h = Vn(p, f);
        t14.recordDroppedEvent("ratelimit_backoff", d, h);
      } else a.push(p);
    }), a.length === 0) return b({});
    let c = $(i[0], a), u = (p) => {
      Be(c, (f, d) => {
        let h = Vn(f, d);
        t14.recordDroppedEvent(p, He(d), h);
      });
    }, l = () => e({ body: Ct(c) }).then((p) => (p.statusCode !== void 0 && (p.statusCode < 200 || p.statusCode >= 300) && _ && m.warn(`Sentry responded with status code ${p.statusCode} to sent event.`), r = wt(r, p), p), (p) => {
      throw u("network_error"), p;
    });
    return n.add(l).then((p) => p, (p) => {
      if (p instanceof x) return _ && m.error("Skipped sending event because buffer is full."), u("queue_overflow"), b({});
      throw p;
    });
  }
  return { send: o, flush: s };
}
function Vn(t14, e) {
  if (!(e !== "event" && e !== "transaction")) return Array.isArray(t14) ? t14[1] : void 0;
}
var ys = "RewriteFrames";
var Ke = (t14 = {}) => {
  let e = t14.root, n = t14.prefix || "app:///", r = "window" in g && g.window !== void 0, s = t14.iteratee || Ts({ isBrowser: r, root: e, prefix: n });
  function o(a) {
    try {
      return { ...a, exception: { ...a.exception, values: a.exception.values.map((c) => ({ ...c, ...c.stacktrace && { stacktrace: i(c.stacktrace) } })) } };
    } catch {
      return a;
    }
  }
  function i(a) {
    return { ...a, frames: a && a.frames && a.frames.map((c) => s(c)) };
  }
  return { name: ys, processEvent(a) {
    let c = a;
    return a.exception && Array.isArray(a.exception.values) && (c = o(c)), c;
  } };
};
function Ts({ isBrowser: t14, root: e, prefix: n }) {
  return (r) => {
    if (!r.filename) return r;
    let s = /^[a-zA-Z]:\\/.test(r.filename) || r.filename.includes("\\") && !r.filename.includes("/"), o = /^\//.test(r.filename);
    if (t14) {
      if (e) {
        let i = r.filename;
        i.indexOf(e) === 0 && (r.filename = i.replace(e, n));
      }
    } else if (s || o) {
      let i = s ? r.filename.replace(/^[a-zA-Z]:/, "").replace(/\\/g, "/") : r.filename, a = e ? It(e, i) : de(i);
      r.filename = `${n}${a}`;
    }
    return r;
  };
}
function Wn(t14) {
  return typeof t14 == "object" && t14 !== null;
}
function As(t14) {
  return Wn(t14) && "handled" in t14 && typeof t14.handled == "boolean" && "type" in t14 && typeof t14.type == "string";
}
function xs(t14) {
  return Wn(t14) && "mechanism" in t14 && As(t14.mechanism);
}
function bs() {
  if (g.SENTRY_RELEASE && g.SENTRY_RELEASE.id) return g.SENTRY_RELEASE.id;
}
function qn(t14, e) {
  return t14 !== void 0 ? (t14[e[0]] = e[1], t14) : { [e[0]]: e[1] };
}
function Kn(t14, e) {
  return t14(e.stack || "", 1);
}
function Rs(t14) {
  let e = t14 && t14.message;
  return e ? e.error && typeof e.error.message == "string" ? e.error.message : e : "No error message";
}
function Zn(t14, e) {
  let n = { type: e.name || e.constructor.name, value: Rs(e) }, r = Kn(t14, e);
  return r.length && (n.stacktrace = { frames: r }), n.type === void 0 && n.value === "" && (n.value = "Unrecoverable error caught"), n;
}
function Cs(t14, e, n, r) {
  let s, i = (r && r.data && xs(r.data) ? r.data.mechanism : void 0) ?? { handled: true, type: "generic" };
  if (Y(n)) s = n;
  else {
    if (N(n)) {
      let c = `Non-Error exception captured with keys: ${ie(n)}`, u = t14?.getClient(), l = u && u.getOptions().normalizeDepth;
      t14?.setExtra("__serialized__", ne(n, l)), s = r && r.syntheticException || new Error(c), s.message = c;
    } else s = r && r.syntheticException || new Error(n), s.message = n;
    i.synthetic = true;
  }
  let a = { exception: { values: [Zn(e, s)] } };
  return le(a, void 0, void 0), J(a, i), { ...a, event_id: r && r.event_id };
}
function Ns(t14, e, n = "info", r, s) {
  let o = { event_id: r && r.event_id, level: n, message: e };
  if (s && r && r.syntheticException) {
    let i = Kn(t14, r.syntheticException);
    i.length && (o.exception = { values: [{ value: e, stacktrace: { frames: i } }] });
  }
  return o;
}
var Os = 5;
var vs = (t14 = { limit: Os }) => ({ name: "LinkedErrors", processEvent: (e, n, r) => ws(r.getOptions().stackParser, t14.limit, e, n) });
function ws(t14, e, n, r) {
  if (!n.exception || !n.exception.values || !r || !M(r.originalException, Error)) return n;
  let s = Xn(t14, e, r.originalException);
  return n.exception.values = [...s, ...n.exception.values], n;
}
function Xn(t14, e, n, r = []) {
  if (!M(n.cause, Error) || r.length + 1 >= e) return r;
  let s = Zn(t14, n.cause);
  return Xn(t14, e, n.cause, [s, ...r]);
}
var Ds = { allowedHeaders: ["CF-RAY", "CF-Worker"] };
var Ms = (t14 = {}) => {
  let e = { ...Ds, ...t14 };
  return { name: "RequestData", preprocessEvent: (n) => {
    let { sdkProcessingMetadata: r } = n;
    return r && ("request" in r && r.request instanceof Request && (n.request = ks(r.request, e), n.user = Ps(n.user ?? {}, r.request, e)), "requestData" in r && (n.request ? n.request.data = r.requestData : n.request = { data: r.requestData })), n;
  } };
};
function Ps(t14, e, n) {
  let r = e.headers.get("CF-Connecting-IP"), { allowedIps: s } = n, o = { ...t14 };
  return !("ip_address" in t14) && r && s !== void 0 && Ls(r, s) && (o.ip_address = r), Object.keys(o).length > 0 ? o : void 0;
}
function ks(t14, e) {
  let n = t14.headers.get("cookie"), r;
  if (n) try {
    r = Fs(n);
  } catch {
  }
  let s = {};
  for (let [u, l] of t14.headers.entries()) u !== "cookie" && (s[u] = l);
  let o = { method: t14.method, cookies: r, headers: s };
  try {
    let u = new URL(t14.url);
    o.url = `${u.protocol}//${u.hostname}${u.pathname}`, o.query_string = u.search;
  } catch {
    let l = t14.url.indexOf("?");
    l < 0 ? o.url = t14.url : (o.url = t14.url.substr(0, l), o.query_string = t14.url.substr(l + 1));
  }
  let { allowedHeaders: i, allowedCookies: a, allowedSearchParams: c } = e;
  if (i !== void 0 && o.headers ? (o.headers = Jt(o.headers, i), Object.keys(o.headers).length === 0 && delete o.headers) : delete o.headers, a !== void 0 && o.cookies ? (o.cookies = Jt(o.cookies, a), Object.keys(o.cookies).length === 0 && delete o.cookies) : delete o.cookies, c !== void 0) {
    let u = Object.fromEntries(new URLSearchParams(o.query_string)), l = new URLSearchParams();
    Object.keys(Jt(u, c)).forEach((p) => {
      l.set(p, u[p]);
    }), o.query_string = l.toString();
  } else delete o.query_string;
  return o;
}
function Ls(t14, e) {
  return typeof e == "boolean" ? e : e instanceof RegExp ? e.test(t14) : Array.isArray(e) ? e.map((r) => r.toLowerCase()).includes(t14) : false;
}
function Jt(t14, e) {
  let n = () => false;
  if (typeof e == "boolean") return e ? t14 : {};
  if (e instanceof RegExp) n = (r) => e.test(r);
  else if (Array.isArray(e)) {
    let r = e.map((s) => s.toLowerCase());
    n = (s) => r.includes(s.toLowerCase());
  } else return {};
  return Object.keys(t14).filter(n).reduce((r, s) => (r[s] = t14[s], r), {});
}
function Fs(t14) {
  if (typeof t14 != "string") return {};
  try {
    return t14.split(";").map((e) => e.split("=")).reduce((e, [n, r]) => (e[decodeURIComponent(n.trim())] = decodeURIComponent(r.trim()), e), {});
  } catch {
    return {};
  }
}
function Us(t14, e) {
  let n = {};
  return t14.forEach((r) => {
    n[r.name] = r, typeof r.setupOnce == "function" && r.setupOnce();
    let s = e.getClient();
    if (s) {
      if (typeof r.setup == "function" && r.setup(s), typeof r.preprocessEvent == "function") {
        let o = r.preprocessEvent.bind(r);
        s.on("preprocessEvent", (i, a) => o(i, a, s));
      }
      if (typeof r.processEvent == "function") {
        let o = r.processEvent.bind(r), i = Object.assign((a, c) => o(a, c, s), { id: r.name });
        s.addEventProcessor(i);
      }
    }
  }), n;
}
var Vt = class extends Ee {
  #e = null;
  #t = false;
  constructor(e) {
    e._metadata = e._metadata || {}, e._metadata.sdk = e._metadata.sdk || { name: "toucan-js", packages: [{ name: "npm:toucan-js", version: "4.0.0" }], version: "4.0.0" }, super(e);
  }
  setupIntegrations() {
    this._isEnabled() && !this.#t && this.#e && (this._integrations = Us(this._options.integrations, this.#e), this.#t = true);
  }
  eventFromException(e, n) {
    return b(Cs(this.#e, this._options.stackParser, e, n));
  }
  eventFromMessage(e, n = "info", r) {
    return b(Ns(this._options.stackParser, e, n, r, this._options.attachStacktrace));
  }
  _prepareEvent(e, n, r) {
    return e.platform = e.platform || "javascript", this.getOptions().request && (e.sdkProcessingMetadata = qn(e.sdkProcessingMetadata, ["request", this.getOptions().request])), this.getOptions().requestData && (e.sdkProcessingMetadata = qn(e.sdkProcessingMetadata, ["requestData", this.getOptions().requestData])), super._prepareEvent(e, n, r);
  }
  getSdk() {
    return this.#e;
  }
  setSdk(e) {
    this.#e = e;
  }
  setRequestBody(e) {
    this.getOptions().requestData = e;
  }
  setEnabled(e) {
    this.getOptions().enabled = e;
  }
};
function $s(t14) {
  let [e, n] = xt(t14);
  return [e, (s) => {
    let o = n(s);
    if (o) {
      let i = o.filename;
      o.abs_path = i !== void 0 && !i.startsWith("/") ? `/${i}` : i, o.in_app = i !== void 0;
    }
    return o;
  }];
}
function Bs(t14) {
  if (t14) return de(t14, ".js");
}
var Hs = De($s(Bs));
function js(t14) {
  function e({ body: n }) {
    try {
      let s = (t14.fetcher ?? fetch)(t14.url, { method: "POST", headers: t14.headers, body: n }).then((o) => ({ statusCode: o.status, headers: { "retry-after": o.headers.get("Retry-After"), "x-sentry-rate-limits": o.headers.get("X-Sentry-Rate-Limits") } }));
      return t14.context && t14.context.waitUntil(s), s;
    } catch (r) {
      return V(r);
    }
  }
  return zt(t14, e);
}
var Ze = class t3 extends R {
  #e;
  constructor(e) {
    if (super(), e.defaultIntegrations = e.defaultIntegrations === false ? [] : [...Array.isArray(e.defaultIntegrations) ? e.defaultIntegrations : [Ms(e.requestDataOptions), vs()]], e.release === void 0) {
      let n = bs();
      n !== void 0 && (e.release = n);
    }
    this.#e = e, this.attachNewClient();
  }
  attachNewClient() {
    let e = new Vt({ ...this.#e, transport: js, integrations: jt(this.#e), stackParser: _t(this.#e.stackParser || Hs), transportOptions: { ...this.#e.transportOptions, context: this.#e.context } });
    this.setClient(e), e.setSdk(this), e.setupIntegrations();
  }
  setRequestBody(e) {
    this.getClient()?.setRequestBody(e);
  }
  setEnabled(e) {
    this.getClient()?.setEnabled(e);
  }
  captureCheckIn(e, n, r) {
    return e.status === "in_progress" && this.setContext("monitor", { slug: e.monitorSlug }), this.getClient().captureCheckIn(e, n, r);
  }
  addBreadcrumb(e, n = 100) {
    let s = this.getClient().getOptions().maxBreadcrumbs || n;
    return super.addBreadcrumb(e, s);
  }
  clone() {
    let e = new t3({ ...this.#e });
    return e._breadcrumbs = [...this._breadcrumbs], e._tags = { ...this._tags }, e._extra = { ...this._extra }, e._contexts = { ...this._contexts }, e._user = this._user, e._level = this._level, e._session = this._session, e._transactionName = this._transactionName, e._fingerprint = this._fingerprint, e._eventProcessors = [...this._eventProcessors], e._requestSession = this._requestSession, e._attachments = [...this._attachments], e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }, e._propagationContext = { ...this._propagationContext }, e._lastEventId = this._lastEventId, e;
  }
  withScope(e) {
    let n = this.clone();
    return e(n);
  }
};
function Qn(t14, e, n, r, s, o, i, a, c) {
  if (!(n && r && s)) return;
  let u = new Ze({ dsn: n, request: t14, context: e, sampleRate: 1, release: i?.tag, integrations: [Ke({ iteratee(l) {
    return l.filename = "/index.js", l;
  } })], requestDataOptions: { allowedHeaders: ["user-agent", "cf-challenge", "accept-encoding", "accept-language", "cf-ray", "content-length", "content-type", "host"], allowedSearchParams: /(.*)/ }, transportOptions: { headers: { "CF-Access-Client-ID": r, "CF-Access-Client-Secret": s } } });
  return o && (u.setTag("colo", o.coloId), u.setTag("metal", o.metalId)), a && c && (u.setTag("accountId", a), u.setTag("scriptId", c)), u.setUser({ id: a?.toString() }), u;
}
function Gs() {
  return { addLogs: () => {
  }, setTags: () => {
  }, end: () => {
  }, isRecording: true };
}
function qt() {
  return { enterSpan: (t14, e, ...n) => e(Gs(), ...n), getSpanContext: () => ({ traceId: "test-trace", spanId: "test-span", parentSpanId: "test-parent-span", traceFlags: 0 }), runWithSpanContext: (t14, e, ...n) => e(...n), traceId: "test-trace", spanId: "test-span", parentSpanId: "test-parent-span", cfTraceIdHeader: "test-trace:test-span:0" };
}
var Ys = { assets_navigation_prefers_asset_serving: 1 };
var Xe = class {
  constructor(e) {
    this.data = {};
    this.readyAnalytics = e;
  }
  setData(e) {
    this.data = { ...this.data, ...e };
  }
  getData(e) {
    return this.data[e];
  }
  write() {
    if (!this.readyAnalytics) return;
    let e = 0;
    for (let n of this.data.compatibilityFlags || []) {
      let r = Ys[n];
      r && (e += r);
    }
    this.readyAnalytics.logEvent({ version: 1, accountId: this.data.accountId, indexId: this.data.scriptId?.toString(), doubles: [this.data.requestTime ?? -1, this.data.coloId ?? -1, this.data.metalId ?? -1, this.data.coloTier ?? -1, this.data.status ?? -1, e], blobs: [this.data.hostname?.substring(0, 256), this.data.userAgent?.substring(0, 256), this.data.htmlHandling, this.data.notFoundHandling, this.data.error?.substring(0, 256), this.data.version, this.data.coloRegion, this.data.cacheStatus] });
  }
};
var et = class {
  constructor(e) {
    this.data = e;
  }
  async get(e) {
    let n = await Vs(e), r = Wt(new Uint8Array(this.data, 20), n);
    return r ? Ws(r) : null;
  }
};
var Vs = async (t14) => {
  let n = new TextEncoder().encode(t14), r = await crypto.subtle.digest("SHA-256", n.buffer);
  return new Uint8Array(r, 0, 16);
};
var Wt = (t14, e) => {
  if (t14.byteLength === 0) return false;
  let n = t14.byteOffset + (t14.byteLength / 40 >> 1) * 40, r = new Uint8Array(t14.buffer, n, 16);
  if (r.byteLength !== e.byteLength) throw new TypeError("Search value and current value are of different lengths");
  let s = qs(e, r);
  if (s < 0) {
    let o = t14.byteOffset, i = n - t14.byteOffset;
    return Wt(new Uint8Array(t14.buffer, o, i), e);
  } else if (s > 0) {
    let o = n + 40, i = t14.buffer.byteLength - n - 40;
    return Wt(new Uint8Array(t14.buffer, o, i), e);
  } else return new Uint8Array(t14.buffer, n, 40);
};
var qs = (t14, e) => {
  if (t14.byteLength < e.byteLength) return -1;
  if (t14.byteLength > e.byteLength) return 1;
  for (let [n, r] of t14.entries()) {
    if (r < e[n]) return -1;
    if (r > e[n]) return 1;
  }
  return 0;
};
var Ws = (t14) => [...t14.slice(16, 32)].map((n) => n.toString(16).padStart(2, "0")).join("");
var Kt = { enable: "assets_navigation_prefers_asset_serving", disable: "assets_navigation_has_no_effect", onByDefaultAfter: "2025-04-01" };
var Ks = [Kt];
var er = (t14) => {
  let e = t14?.compatibility_date ?? "2021-11-02", r = t14?.compatibility_flags ?? [];
  for (let s of Ks) s.onByDefaultAfter && e >= s.onByDefaultAfter && !r.find((o) => o === s.disable) && !r.find((o) => o === s.enable) && r.push(s.enable);
  return { compatibilityDate: e, compatibilityFlags: r };
};
var tr = (t14, e) => !!t14.compatibility_flags.find((n) => n === e.enable);
var Zt = (t14) => {
  let e = er(t14);
  return { compatibility_date: e.compatibilityDate, compatibility_flags: e.compatibilityFlags, html_handling: t14?.html_handling ?? "auto-trailing-slash", not_found_handling: t14?.not_found_handling ?? "none", redirects: t14?.redirects ?? { version: 1, staticRules: {}, rules: {} }, headers: t14?.headers ?? { version: 2, rules: {} }, account_id: t14?.account_id ?? -1, script_id: t14?.script_id ?? -1 };
};
var tt = class {
  constructor(e) {
    this.data = {};
    this.readyAnalytics = e;
  }
  setData(e) {
    this.data = { ...this.data, ...e };
  }
  getData(e) {
    return this.data[e];
  }
  write() {
    this.readyAnalytics && this.readyAnalytics.logEvent({ version: 1, accountId: this.data.accountId, indexId: this.data.experimentName, doubles: [this.data.manifestReadTime ?? -1], blobs: [] });
  }
};
var y = class t4 extends Response {
  static {
    this.status = 200;
  }
  constructor(e, n) {
    super(e, { ...n, status: t4.status });
  }
};
var j = class t5 extends Response {
  static {
    this.status = 404;
  }
  constructor(...[e, n]) {
    super(e, { ...n, status: t5.status, statusText: "Not Found" });
  }
};
var ye = class extends j {
  constructor() {
    super();
  }
};
var Te = class t6 extends Response {
  static {
    this.status = 405;
  }
  constructor(...[e, n]) {
    super(e, { ...n, status: t6.status, statusText: "Method Not Allowed" });
  }
};
var G = class t7 extends Response {
  static {
    this.status = 500;
  }
  constructor(e, n) {
    super(null, { ...n, status: t7.status });
  }
};
var Ie = class t8 extends Response {
  static {
    this.status = 304;
  }
  constructor(...[e, n]) {
    super(null, { ...n, status: t8.status, statusText: "Not Modified" });
  }
};
var Ae = class t9 extends Response {
  static {
    this.status = 301;
  }
  constructor(e, n) {
    super(null, { ...n, status: t9.status, statusText: "Moved Permanently", headers: { ...n?.headers, Location: e } });
  }
};
var xe = class t10 extends Response {
  static {
    this.status = 302;
  }
  constructor(e, n) {
    super(null, { ...n, status: t10.status, statusText: "Found", headers: { ...n?.headers, Location: e } });
  }
};
var be = class t11 extends Response {
  static {
    this.status = 303;
  }
  constructor(e, n) {
    super(null, { ...n, status: t11.status, statusText: "See Other", headers: { ...n?.headers, Location: e } });
  }
};
var K = class t12 extends Response {
  static {
    this.status = 307;
  }
  constructor(e, n) {
    super(null, { ...n, status: t12.status, statusText: "Temporary Redirect", headers: { ...n?.headers, Location: e } });
  }
};
var Re = class t13 extends Response {
  static {
    this.status = 308;
  }
  constructor(e, n) {
    super(null, { ...n, status: t13.status, statusText: "Permanent Redirect", headers: { ...n?.headers, Location: e } });
  }
};
var nr = "public, max-age=0, must-revalidate";
var Zs = /[-/\\^$*+?.()|[\]{}]/g;
var Xs = (t14) => t14.replace(Zs, "\\$&");
var Qs = /(?<=^https:\\\/\\\/[^/]*?):([A-Za-z]\w*)(?=\\)/g;
var eo = /:([A-Za-z]\w*)/g;
var nt = (t14, e) => {
  for (let [n, r] of Object.entries(e)) t14 = t14.replaceAll(`:${n}`, r);
  return t14;
};
var rt = (t14, e = (n) => n) => {
  if (!t14) return () => [];
  let n = Object.entries(t14).map(([r, s]) => {
    let o = r.startsWith("https://");
    r = r.split("*").map(Xs).join("(?<splat>.*)");
    let i = r.matchAll(Qs);
    for (let c of i) r = r.split(c[0]).join(`(?<${c[1]}>[^/.]+)`);
    let a = r.matchAll(eo);
    for (let c of a) r = r.split(c[0]).join(`(?<${c[1]}>[^/]+)`);
    r = "^" + r + "$";
    try {
      let c = new RegExp(r);
      return [{ crossHost: o, regExp: c }, s];
    } catch {
    }
  }).filter((r) => r !== void 0);
  return ({ request: r }) => {
    let { pathname: s, hostname: o } = new URL(r.url);
    return n.map(([{ crossHost: i, regExp: a }, c]) => {
      let u = i ? `https://${o}${s}` : s, l = a.exec(u);
      if (l) return e(c, l.groups || {});
    }).filter((i) => i !== void 0);
  };
};
function rr(t14, e, n, r) {
  let s = new Headers({ ETag: `"${t14}"` });
  return e !== void 0 && s.append("Content-Type", e), to(r) && s.append("Cache-Control", nr), s.append("CF-Cache-Status", n), s;
}
function to(t14) {
  return !t14.headers.has("Authorization") && !t14.headers.has("Range");
}
function sr(t14, e, n) {
  let s = rt(n.headers?.version === or ? n.headers.rules : {}, ({ set: i = {}, unset: a = [] }, c) => {
    let u = {};
    return Object.keys(i).forEach((l) => {
      u[l] = nt(i[l], c);
    }), { set: u, unset: a };
  })({ request: t14 }), o = /* @__PURE__ */ new Set();
  return s.forEach(({ set: i = {}, unset: a = [] }) => {
    a.forEach((c) => {
      e.headers.delete(c);
    }), Object.keys(i).forEach((c) => {
      o.has(c.toLowerCase()) ? e.headers.append(c, i[c]) : (e.headers.set(c, i[c]), o.add(c.toLowerCase()));
    });
  }), e;
}
var no = 1;
var or = 2;
var ir = async (t14, e, n, r) => {
  let s = new URL(t14.url), { host: o, search: i } = s, { pathname: a } = s, c = () => {
    let I = n.redirects.staticRules[`https://${o}${a}`], w = n.redirects.staticRules[a];
    return I && w ? I.lineNumber < w.lineNumber ? I : w : I || w;
  }, u = () => rt(n.redirects.version === no ? n.redirects.rules : {}, ({ status: I, to: w }, C) => ({ status: I, to: nt(w, C) })), l = c() || u()({ request: t14 })[0], p = false;
  if (l) if (l.status === 200) a = new URL(l.to, t14.url).pathname, p = true;
  else {
    let { status: I, to: w } = l, C = new URL(w, t14.url), oe = C.origin === new URL(t14.url).origin ? `${C.pathname}${C.search || i}${C.hash}` : `${C.href.slice(0, C.href.length - (C.search.length + C.hash.length))}${C.search ? C.search : i}${C.hash}`;
    switch (I) {
      case Ae.status:
        return new Ae(oe);
      case be.status:
        return new be(oe);
      case K.status:
        return new K(oe);
      case Re.status:
        return new Re(oe);
      case xe.status:
      default:
        return new xe(oe);
    }
  }
  let f = co(a), d = await ur(f, t14, n, r);
  if (!d) {
    let I = p ? new j() : new ye();
    return e.JAEGER.enterSpan("no_intent", (w) => (w.setTags({ decodedPathname: f, configuration: JSON.stringify(n), proxied: p, status: I.status }), I));
  }
  let h = t14.method.toUpperCase();
  if (!["GET", "HEAD"].includes(h)) return e.JAEGER.enterSpan("method_not_allowed", (I) => (I.setTags({ method: h, status: Te.status }), new Te()));
  let Z = d.redirect ?? f, T = uo(Z);
  return T !== a && d.asset || d.redirect ? e.JAEGER.enterSpan("redirect", (I) => (I.setTags({ originalPath: a, location: T !== a ? T : d.redirect ?? "<unknown>", status: K.status }), new K(T + i))) : d.asset ? d.asset : e.JAEGER.enterSpan("unknown_action", (I) => (I.setTags({ pathname: a, status: G.status }), new G(new Error("Unknown action"))));
};
var ro = async (t14, e, n, r, s) => {
  let { pathname: o } = new URL(e.url), i = e.method.toUpperCase(), a = await n.JAEGER.enterSpan("getByETag", async (f) => (f.setTags({ pathname: o, eTag: t14.eTag, status: t14.status }), await r(t14.eTag, e))), c = rr(t14.eTag, a.contentType, a.cacheStatus, e);
  s.setData({ cacheStatus: a.cacheStatus });
  let u = `"${t14.eTag}"`, l = `W/${u}`, p = e.headers.get("If-None-Match") || "";
  return [l, u].includes(p) ? n.JAEGER.enterSpan("matched_etag", (f) => (f.setTags({ matchedEtag: p, status: Ie.status }), new Ie(null, { headers: c }))) : n.JAEGER.enterSpan("response", (f) => {
    f.setTags({ etag: t14.eTag, status: t14.status, head: i === "HEAD" });
    let d = i === "HEAD" ? null : a.readableStream;
    switch (t14.status) {
      case j.status:
        return new j(d, { headers: c });
      case y.status:
        return new y(d, { headers: c });
    }
  });
};
var ar = async (t14, e, n, r) => (tr(n, Kt) && t14.headers.get("Sec-Fetch-Mode") === "navigate" || (n = { ...n, not_found_handling: "none" }), !(await ir(t14, e, n, r) instanceof ye));
var cr = async (t14, e, n, r, s, o) => {
  let i = await ir(t14, e, n, r), a = i instanceof Response ? i : await ro(i, t14, e, s, o);
  return sr(t14, a, n);
};
var ur = async (t14, e, n, r, s = false) => {
  switch (n.html_handling) {
    case "auto-trailing-slash":
      return so(t14, e, n, r, s);
    case "force-trailing-slash":
      return oo(t14, e, n, r, s);
    case "drop-trailing-slash":
      return io(t14, e, n, r, s);
    case "none":
      return ao(t14, e, n, r);
  }
};
var so = async (t14, e, n, r, s) => {
  let o = null, i = null, a = await r(t14, e);
  if (t14.endsWith("/index")) {
    if (a) return { asset: { eTag: a, status: y.status }, redirect: null };
    if (o = await E(`${t14}.html`, e, t14.slice(0, -5), n, r, s)) return o;
    if (o = await E(`${t14.slice(0, -6)}.html`, e, t14.slice(0, -6), n, r, s)) return o;
  } else if (t14.endsWith("/index.html")) {
    if (o = await E(t14, e, t14.slice(0, -10), n, r, s)) return o;
    if (o = await E(`${t14.slice(0, -11)}.html`, e, t14.slice(0, -11), n, r, s)) return o;
  } else if (t14.endsWith("/")) {
    if (i = await r(`${t14}index.html`, e)) return { asset: { eTag: i, status: y.status }, redirect: null };
    if (o = await E(`${t14.slice(0, -1)}.html`, e, t14.slice(0, -1), n, r, s)) return o;
  } else if (t14.endsWith(".html")) {
    if (o = await E(t14, e, t14.slice(0, -5), n, r, s)) return o;
    if (o = await E(`${t14.slice(0, -5)}/index.html`, e, `${t14.slice(0, -5)}/`, n, r, s)) return o;
  }
  return a ? { asset: { eTag: a, status: y.status }, redirect: null } : (i = await r(`${t14}.html`, e)) ? { asset: { eTag: i, status: y.status }, redirect: null } : (o = await E(`${t14}/index.html`, e, `${t14}/`, n, r, s)) ? o : st(t14, e, n, r);
};
var oo = async (t14, e, n, r, s) => {
  let o = null, i = null, a = await r(t14, e);
  if (t14.endsWith("/index")) {
    if (a) return { asset: { eTag: a, status: y.status }, redirect: null };
    if (o = await E(`${t14}.html`, e, t14.slice(0, -5), n, r, s)) return o;
    if (o = await E(`${t14.slice(0, -6)}.html`, e, t14.slice(0, -5), n, r, s)) return o;
  } else if (t14.endsWith("/index.html")) {
    if (o = await E(t14, e, t14.slice(0, -10), n, r, s)) return o;
    if (o = await E(`${t14.slice(0, -11)}.html`, e, t14.slice(0, -10), n, r, s)) return o;
  } else if (t14.endsWith("/")) {
    if (i = await r(`${t14}index.html`, e)) return { asset: { eTag: i, status: y.status }, redirect: null };
    if (i = await r(`${t14.slice(0, -1)}.html`, e)) return { asset: { eTag: i, status: y.status }, redirect: null };
  } else if (t14.endsWith(".html")) {
    if (o = await E(t14, e, `${t14.slice(0, -5)}/`, n, r, s)) return o;
    if (a) return { asset: { eTag: a, status: y.status }, redirect: null };
    if (o = await E(`${t14.slice(0, -5)}/index.html`, e, `${t14.slice(0, -5)}/`, n, r, s)) return o;
  }
  return a ? { asset: { eTag: a, status: y.status }, redirect: null } : (o = await E(`${t14}.html`, e, `${t14}/`, n, r, s)) || (o = await E(`${t14}/index.html`, e, `${t14}/`, n, r, s)) ? o : st(t14, e, n, r);
};
var io = async (t14, e, n, r, s) => {
  let o = null, i = null, a = await r(t14, e);
  if (t14.endsWith("/index")) {
    if (a) return { asset: { eTag: a, status: y.status }, redirect: null };
    if (t14 === "/index") {
      if (o = await E("/index.html", e, "/", n, r, s)) return o;
    } else {
      if (o = await E(`${t14.slice(0, -6)}.html`, e, t14.slice(0, -6), n, r, s)) return o;
      if (o = await E(`${t14}.html`, e, t14.slice(0, -6), n, r, s)) return o;
    }
  } else if (t14.endsWith("/index.html")) if (t14 === "/index.html") {
    if (o = await E("/index.html", e, "/", n, r, s)) return o;
  } else {
    if (o = await E(t14, e, t14.slice(0, -11), n, r, s)) return o;
    if (a) return { asset: { eTag: a, status: y.status }, redirect: null };
    if (o = await E(`${t14.slice(0, -11)}.html`, e, t14.slice(0, -11), n, r, s)) return o;
  }
  else if (t14.endsWith("/")) if (t14 === "/") {
    if (i = await r("/index.html", e)) return { asset: { eTag: i, status: y.status }, redirect: null };
  } else {
    if (o = await E(`${t14.slice(0, -1)}.html`, e, t14.slice(0, -1), n, r, s)) return o;
    if (o = await E(`${t14.slice(0, -1)}/index.html`, e, t14.slice(0, -1), n, r, s)) return o;
  }
  else if (t14.endsWith(".html")) {
    if (o = await E(t14, e, t14.slice(0, -5), n, r, s)) return o;
    if (o = await E(`${t14.slice(0, -5)}/index.html`, e, t14.slice(0, -5), n, r, s)) return o;
  }
  return a ? { asset: { eTag: a, status: y.status }, redirect: null } : (i = await r(`${t14}.html`, e)) ? { asset: { eTag: i, status: y.status }, redirect: null } : (i = await r(`${t14}/index.html`, e)) ? { asset: { eTag: i, status: y.status }, redirect: null } : st(t14, e, n, r);
};
var ao = async (t14, e, n, r) => {
  let s = await r(t14, e);
  return s ? { asset: { eTag: s, status: y.status }, redirect: null } : st(t14, e, n, r);
};
var st = async (t14, e, n, r) => {
  switch (n.not_found_handling) {
    case "single-page-application": {
      let s = await r("/index.html", e);
      return s ? { asset: { eTag: s, status: y.status }, redirect: null } : null;
    }
    case "404-page": {
      let s = t14;
      for (; s; ) {
        s = s.slice(0, s.lastIndexOf("/"));
        let o = await r(`${s}/404.html`, e);
        if (o) return { asset: { eTag: o, status: j.status }, redirect: null };
      }
      return null;
    }
    case "none":
    default:
      return null;
  }
};
var E = async (t14, e, n, r, s, o) => {
  if (o) return null;
  if (!await s(n, e)) {
    let i = await ur(n, e, r, s, true);
    if (i?.asset && i.asset.eTag === await s(t14, e)) return { asset: null, redirect: n };
  }
  return null;
};
var co = (t14) => t14.split("/").map((e) => {
  try {
    return decodeURIComponent(e);
  } catch {
    return e;
  }
}).join("/").replace(/\/+/g, "/");
var uo = (t14) => t14.split("/").map((e) => {
  try {
    return encodeURIComponent(e);
  } catch {
    return e;
  }
}).join("/");
function lr(t14, e, n) {
  try {
    let r = new G(n);
    return t14 && t14.captureException(n), n instanceof Error && e.setData({ error: n.message }), r;
  } catch (r) {
    return console.error("Error handling error", r), new G(r);
  }
}
function pr(t14, e, n) {
  try {
    t14.setData({ requestTime: e.now() - n }), t14.write();
  } catch (r) {
    console.error("Error submitting metrics", r);
  }
}
async function dr(t14, e, n, r = 1) {
  let s = 0;
  for (; s <= r; ) try {
    let o = await t14.getWithMetadata(e, { type: "stream", cacheTtl: 31536e3 });
    if (o.value === null) {
      let i = await t14.getWithMetadata(e, { type: "stream", cacheTtl: 60 });
      return i.value !== null && n && n.captureException(new Error(`Initial request for asset ${e} failed, but subsequent request succeeded.`)), i;
    }
    return o;
  } catch (o) {
    if (s >= r) {
      let i = `KV GET ${e} failed.`;
      throw o instanceof Error && (i = `KV GET ${e} failed: ${o.message}`), new Error(i);
    }
    await new Promise((i) => setTimeout(i, Math.pow(2, s++) * 1e3));
  }
}
var fr = class extends lo {
  async fetch(t14) {
    let e, n = new Xe(this.env.ANALYTICS), r = new X(this.env.UNSAFE_PERFORMANCE), s = r.now();
    try {
      this.env.JAEGER ??= qt(), e = Qn(t14, this.ctx, this.env.SENTRY_DSN, this.env.SENTRY_ACCESS_CLIENT_ID, this.env.SENTRY_ACCESS_CLIENT_SECRET, this.env.COLO_METADATA, this.env.VERSION_METADATA, this.env.CONFIG?.account_id, this.env.CONFIG?.script_id);
      let o = Zt(this.env.CONFIG);
      e?.setContext("compatibilityOptions", { compatibilityDate: o.compatibility_date, compatibilityFlags: o.compatibility_flags, originalCompatibilityFlags: this.env.CONFIG.compatibility_flags });
      let i = t14.headers.get("user-agent") ?? "UA UNKNOWN", a = new URL(t14.url);
      return this.env.COLO_METADATA && this.env.VERSION_METADATA && this.env.CONFIG && n.setData({ accountId: this.env.CONFIG.account_id, scriptId: this.env.CONFIG.script_id, coloId: this.env.COLO_METADATA.coloId, metalId: this.env.COLO_METADATA.metalId, coloTier: this.env.COLO_METADATA.coloTier, coloRegion: this.env.COLO_METADATA.coloRegion, version: this.env.VERSION_METADATA.tag, hostname: a.hostname, htmlHandling: o.html_handling, notFoundHandling: o.not_found_handling, compatibilityFlags: o.compatibility_flags, userAgent: i }), await this.env.JAEGER.enterSpan("handleRequest", async (c) => {
        c.setTags({ hostname: a.hostname, eyeballPath: a.pathname, env: this.env.ENVIRONMENT, version: this.env.VERSION_METADATA?.id });
        let u = await cr(t14, this.env, o, this.unstable_exists.bind(this), this.unstable_getByETag.bind(this), n);
        return n.setData({ status: u.status }), u;
      });
    } catch (o) {
      return lr(e, n, o);
    } finally {
      pr(n, r, s);
    }
  }
  async unstable_canFetch(t14) {
    return this.env.JAEGER ??= qt(), ar(t14, this.env, Zt(this.env.CONFIG), this.unstable_exists.bind(this));
  }
  async unstable_getByETag(t14, e) {
    let n = new X(this.env.UNSAFE_PERFORMANCE), r = n.now(), s = await dr(this.env.ASSETS_KV_NAMESPACE, t14), i = n.now() - r;
    if (!s || !s.value) throw new Error(`Requested asset ${t14} exists in the asset manifest but not in the KV namespace.`);
    return { readableStream: s.value, contentType: s.metadata?.contentType, cacheStatus: i <= 100 ? "HIT" : "MISS" };
  }
  async unstable_getByPathname(t14, e) {
    let n = await this.unstable_exists(t14, e);
    return n ? this.unstable_getByETag(n, e) : null;
  }
  async unstable_exists(t14, e) {
    let n = new tt(this.env.EXPERIMENT_ANALYTICS), r = new X(this.env.UNSAFE_PERFORMANCE);
    this.env.COLO_METADATA && this.env.VERSION_METADATA && this.env.CONFIG && n.setData({ accountId: this.env.CONFIG.account_id, experimentName: "manifest-read-timing" });
    let s = r.now();
    try {
      return await new et(this.env.ASSETS_MANIFEST).get(t14);
    } finally {
      n.setData({ manifestReadTime: r.now() - s }), n.write();
    }
  }
};

// src/constants.ts
var ADDITIONAL_MODULE_TYPES = [
  "CompiledWasm",
  "Data",
  "Text"
];

// src/shared.ts
var UNKNOWN_HOST = "http://localhost";
var ADDITIONAL_MODULE_PATTERN = `__CLOUDFLARE_MODULE__(${ADDITIONAL_MODULE_TYPES.join("|")})__(.*?)__`;
var additionalModuleRE = new RegExp(ADDITIONAL_MODULE_PATTERN);
var additionalModuleGlobalRE = new RegExp(
  ADDITIONAL_MODULE_PATTERN,
  "g"
);

// src/asset-workers/asset-worker.ts
var CustomAssetWorker = class extends fr {
  async fetch(request) {
    const response = await super.fetch(request);
    const modifiedResponse = new Response(response.body, response);
    modifiedResponse.headers.delete("ETag");
    modifiedResponse.headers.delete("Cache-Control");
    return modifiedResponse;
  }
  async unstable_getByETag(eTag) {
    const url = new URL(eTag, UNKNOWN_HOST);
    const response = await this.env.__VITE_FETCH_ASSET__.fetch(url);
    if (!response.body) {
      throw new Error(`Unexpected error. No HTML found for ${eTag}.`);
    }
    return { readableStream: response.body, contentType: "text/html" };
  }
  async unstable_exists(pathname) {
    const url = new URL(pathname.replace(/^\/{2,}/, "/"), UNKNOWN_HOST);
    const response = await this.env.__VITE_ASSET_EXISTS__.fetch(url);
    const exists = await response.json();
    return exists ? pathname : null;
  }
  async unstable_canFetch(request) {
    const secFetchMode = request.headers.get("X-Mf-Sec-Fetch-Mode");
    if (secFetchMode) {
      request.headers.set("Sec-Fetch-Mode", secFetchMode);
    }
    return await super.unstable_canFetch(request);
  }
};
export {
  CustomAssetWorker as default
};
