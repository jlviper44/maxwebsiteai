// ../workers-shared/dist/router-worker.mjs
var ue = class {
  constructor(e) {
    this.performanceTimer = e;
  }
  now() {
    return this.performanceTimer ? this.performanceTimer.timeOrigin + this.performanceTimer.now() : Date.now();
  }
};
var bt = Object.prototype.toString;
function F(t4) {
  switch (bt.call(t4)) {
    case "[object Error]":
    case "[object Exception]":
    case "[object DOMException]":
      return true;
    default:
      return O(t4, Error);
  }
}
function Le(t4, e) {
  return bt.call(t4) === `[object ${e}]`;
}
function Fe(t4) {
  return Le(t4, "ErrorEvent");
}
function Ue(t4) {
  return Le(t4, "String");
}
function H(t4) {
  return typeof t4 == "object" && t4 !== null && "__sentry_template_string__" in t4 && "__sentry_template_values__" in t4;
}
function pe(t4) {
  return t4 === null || H(t4) || typeof t4 != "object" && typeof t4 != "function";
}
function A(t4) {
  return Le(t4, "Object");
}
function Be(t4) {
  return typeof Event < "u" && O(t4, Event);
}
function $e(t4) {
  return typeof Element < "u" && O(t4, Element);
}
function C(t4) {
  return !!(t4 && t4.then && typeof t4.then == "function");
}
function je(t4) {
  return A(t4) && "nativeEvent" in t4 && "preventDefault" in t4 && "stopPropagation" in t4;
}
function O(t4, e) {
  try {
    return t4 instanceof e;
  } catch {
    return false;
  }
}
function Ge(t4) {
  return !!(typeof t4 == "object" && t4 !== null && (t4.__isVue || t4._isVue));
}
function k(t4, e = 0) {
  return typeof t4 != "string" || e === 0 || t4.length <= e ? t4 : `${t4.slice(0, e)}...`;
}
var D = "8.9.2";
var m = globalThis;
function q(t4, e, n) {
  let r = n || m, o = r.__SENTRY__ = r.__SENTRY__ || {}, s = o[D] = o[D] || {};
  return s[t4] || (s[t4] = e());
}
var kn = m;
var Dn = 80;
function Rt(t4, e = {}) {
  if (!t4) return "<unknown>";
  try {
    let n = t4, r = 5, o = [], s = 0, i = 0, a = " > ", c = a.length, u, f = Array.isArray(e) ? e : e.keyAttrs, p = !Array.isArray(e) && e.maxStringLength || Dn;
    for (; n && s++ < r && (u = vn(n, f), !(u === "html" || s > 1 && i + o.length * c + u.length >= p)); ) o.push(u), i += u.length, n = n.parentNode;
    return o.reverse().join(a);
  } catch {
    return "<unknown>";
  }
}
function vn(t4, e) {
  let n = t4, r = [], o, s, i, a, c;
  if (!n || !n.tagName) return "";
  if (kn.HTMLElement && n instanceof HTMLElement && n.dataset) {
    if (n.dataset.sentryComponent) return n.dataset.sentryComponent;
    if (n.dataset.sentryElement) return n.dataset.sentryElement;
  }
  r.push(n.tagName.toLowerCase());
  let u = e && e.length ? e.filter((p) => n.getAttribute(p)).map((p) => [p, n.getAttribute(p)]) : null;
  if (u && u.length) u.forEach((p) => {
    r.push(`[${p[0]}="${p[1]}"]`);
  });
  else if (n.id && r.push(`#${n.id}`), o = n.className, o && Ue(o)) for (s = o.split(/\s+/), c = 0; c < s.length; c++) r.push(`.${s[c]}`);
  let f = ["aria-label", "type", "name", "title", "alt"];
  for (c = 0; c < f.length; c++) i = f[c], a = n.getAttribute(i), a && r.push(`[${i}="${a}"]`);
  return r.join("");
}
var v = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__;
var Mn = "Sentry Logger ";
var He = ["debug", "info", "warn", "error", "log", "assert", "trace"];
var qe = {};
function fe(t4) {
  if (!("console" in m)) return t4();
  let e = m.console, n = {}, r = Object.keys(qe);
  r.forEach((o) => {
    let s = qe[o];
    n[o] = e[o], e[o] = s;
  });
  try {
    return t4();
  } finally {
    r.forEach((o) => {
      e[o] = n[o];
    });
  }
}
function Pn() {
  let t4 = false, e = { enable: () => {
    t4 = true;
  }, disable: () => {
    t4 = false;
  }, isEnabled: () => t4 };
  return v ? He.forEach((n) => {
    e[n] = (...r) => {
      t4 && fe(() => {
        m.console[n](`${Mn}[${n}]:`, ...r);
      });
    };
  }) : He.forEach((n) => {
    e[n] = () => {
    };
  }), e;
}
var d = Pn();
var wn = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
function Ln(t4) {
  return t4 === "http" || t4 === "https";
}
function M(t4, e = false) {
  let { host: n, path: r, pass: o, port: s, projectId: i, protocol: a, publicKey: c } = t4;
  return `${a}://${c}${e && o ? `:${o}` : ""}@${n}${s ? `:${s}` : ""}/${r && `${r}/`}${i}`;
}
function Ct(t4) {
  let e = wn.exec(t4);
  if (!e) {
    fe(() => {
      console.error(`Invalid Sentry Dsn: ${t4}`);
    });
    return;
  }
  let [n, r, o = "", s, i = "", a] = e.slice(1), c = "", u = a, f = u.split("/");
  if (f.length > 1 && (c = f.slice(0, -1).join("/"), u = f.pop()), u) {
    let p = u.match(/^\d+/);
    p && (u = p[0]);
  }
  return Ot({ host: s, pass: o, path: c, projectId: u, port: i, protocol: n, publicKey: r });
}
function Ot(t4) {
  return { protocol: t4.protocol, publicKey: t4.publicKey || "", pass: t4.pass || "", host: t4.host, port: t4.port || "", path: t4.path || "", projectId: t4.projectId };
}
function Fn(t4) {
  if (!v) return true;
  let { port: e, projectId: n, protocol: r } = t4;
  return ["protocol", "publicKey", "host", "projectId"].find((i) => t4[i] ? false : (d.error(`Invalid Sentry Dsn: ${i} missing`), true)) ? false : n.match(/^\d+$/) ? Ln(r) ? e && isNaN(parseInt(e, 10)) ? (d.error(`Invalid Sentry Dsn: Invalid port ${e}`), false) : true : (d.error(`Invalid Sentry Dsn: Invalid protocol ${r}`), false) : (d.error(`Invalid Sentry Dsn: Invalid projectId ${n}`), false);
}
function de(t4) {
  let e = typeof t4 == "string" ? Ct(t4) : Ot(t4);
  if (!(!e || !Fn(e))) return e;
}
var y = class extends Error {
  constructor(e, n = "warn") {
    super(e), this.message = e, this.name = new.target.prototype.constructor.name, Object.setPrototypeOf(this, new.target.prototype), this.logLevel = n;
  }
};
function U(t4, e, n) {
  try {
    Object.defineProperty(t4, e, { value: n, writable: true, configurable: true });
  } catch {
    v && d.log(`Failed to add non-enumerable property "${e}" to object`, t4);
  }
}
function Ye(t4) {
  return Object.keys(t4).map((e) => `${encodeURIComponent(e)}=${encodeURIComponent(t4[e])}`).join("&");
}
function le(t4) {
  if (F(t4)) return { message: t4.message, name: t4.name, stack: t4.stack, ...kt(t4) };
  if (Be(t4)) {
    let e = { type: t4.type, target: Nt(t4.target), currentTarget: Nt(t4.currentTarget), ...kt(t4) };
    return typeof CustomEvent < "u" && O(t4, CustomEvent) && (e.detail = t4.detail), e;
  } else return t4;
}
function Nt(t4) {
  try {
    return $e(t4) ? Rt(t4) : Object.prototype.toString.call(t4);
  } catch {
    return "<unknown>";
  }
}
function kt(t4) {
  if (typeof t4 == "object" && t4 !== null) {
    let e = {};
    for (let n in t4) Object.prototype.hasOwnProperty.call(t4, n) && (e[n] = t4[n]);
    return e;
  } else return {};
}
function K(t4, e = 40) {
  let n = Object.keys(le(t4));
  if (n.sort(), !n.length) return "[object has no keys]";
  if (n[0].length >= e) return k(n[0], e);
  for (let r = n.length; r > 0; r--) {
    let o = n.slice(0, r).join(", ");
    if (!(o.length > e)) return r === n.length ? o : k(o, e);
  }
  return "";
}
function E(t4) {
  return ze(t4, /* @__PURE__ */ new Map());
}
function ze(t4, e) {
  if (Un(t4)) {
    let n = e.get(t4);
    if (n !== void 0) return n;
    let r = {};
    e.set(t4, r);
    for (let o of Object.keys(t4)) typeof t4[o] < "u" && (r[o] = ze(t4[o], e));
    return r;
  }
  if (Array.isArray(t4)) {
    let n = e.get(t4);
    if (n !== void 0) return n;
    let r = [];
    return e.set(t4, r), t4.forEach((o) => {
      r.push(ze(o, e));
    }), r;
  }
  return t4;
}
function Un(t4) {
  if (!A(t4)) return false;
  try {
    let e = Object.getPrototypeOf(t4).constructor.name;
    return !e || e === "Object";
  } catch {
    return true;
  }
}
var me = "?";
var Dt = /\(error: (.*)\)/;
var vt = /captureMessage|captureException/;
function ge(...t4) {
  let e = t4.sort((n, r) => n[0] - r[0]).map((n) => n[1]);
  return (n, r = 0, o = 0) => {
    let s = [], i = n.split(`
`);
    for (let a = r; a < i.length; a++) {
      let c = i[a];
      if (c.length > 1024) continue;
      let u = Dt.test(c) ? c.replace(Dt, "$1") : c;
      if (!u.match(/\S*Error: /)) {
        for (let f of e) {
          let p = f(u);
          if (p) {
            s.push(p);
            break;
          }
        }
        if (s.length >= 50 + o) break;
      }
    }
    return Mt(s.slice(o));
  };
}
function We(t4) {
  return Array.isArray(t4) ? ge(...t4) : t4;
}
function Mt(t4) {
  if (!t4.length) return [];
  let e = Array.from(t4);
  return /sentryWrapped/.test(e[e.length - 1].function || "") && e.pop(), e.reverse(), vt.test(e[e.length - 1].function || "") && (e.pop(), vt.test(e[e.length - 1].function || "") && e.pop()), e.slice(0, 50).map((n) => ({ ...n, filename: n.filename || e[e.length - 1].filename, function: n.function || me }));
}
var Je = "<anonymous>";
function V(t4) {
  try {
    return !t4 || typeof t4 != "function" ? Je : t4.name || Je;
  } catch {
    return Je;
  }
}
var he = {};
var Pt = {};
function _e(t4, e) {
  he[t4] = he[t4] || [], he[t4].push(e);
}
function Ee(t4, e) {
  Pt[t4] || (e(), Pt[t4] = true);
}
function Se(t4, e) {
  let n = t4 && he[t4];
  if (n) for (let r of n) try {
    r(e);
  } catch (o) {
    v && d.error(`Error while triggering instrumentation handler.
Type: ${t4}
Name: ${V(r)}
Error:`, o);
  }
}
var wt = 1e3;
function z() {
  return Date.now() / wt;
}
function Bn() {
  let { performance: t4 } = m;
  if (!t4 || !t4.now) return z;
  let e = Date.now() - t4.now(), n = t4.timeOrigin == null ? e : t4.timeOrigin;
  return () => (n + t4.now()) / wt;
}
var Z = Bn();
var X;
var $n = (() => {
  let { performance: t4 } = m;
  if (!t4 || !t4.now) {
    X = "none";
    return;
  }
  let e = 3600 * 1e3, n = t4.now(), r = Date.now(), o = t4.timeOrigin ? Math.abs(t4.timeOrigin + n - r) : e, s = o < e, i = t4.timing && t4.timing.navigationStart, c = typeof i == "number" ? Math.abs(i + n - r) : e, u = c < e;
  return s || u ? o <= c ? (X = "timeOrigin", t4.timeOrigin) : (X = "navigationStart", i) : (X = "dateNow", r);
})();
var ye = null;
function Ke(t4) {
  let e = "error";
  _e(e, t4), Ee(e, jn);
}
function jn() {
  ye = m.onerror, m.onerror = function(t4, e, n, r, o) {
    return Se("error", { column: r, error: o, line: n, msg: t4, url: e }), ye && !ye.__SENTRY_LOADER__ ? ye.apply(this, arguments) : false;
  }, m.onerror.__SENTRY_INSTRUMENTED__ = true;
}
var Te = null;
function Ve(t4) {
  let e = "unhandledrejection";
  _e(e, t4), Ee(e, Gn);
}
function Gn() {
  Te = m.onunhandledrejection, m.onunhandledrejection = function(t4) {
    return Se("unhandledrejection", t4), Te && !Te.__SENTRY_LOADER__ ? Te.apply(this, arguments) : true;
  }, m.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;
}
function Lt() {
  let t4 = typeof WeakSet == "function", e = t4 ? /* @__PURE__ */ new WeakSet() : [];
  function n(o) {
    if (t4) return e.has(o) ? true : (e.add(o), false);
    for (let s = 0; s < e.length; s++) if (e[s] === o) return true;
    return e.push(o), false;
  }
  function r(o) {
    if (t4) e.delete(o);
    else for (let s = 0; s < e.length; s++) if (e[s] === o) {
      e.splice(s, 1);
      break;
    }
  }
  return [n, r];
}
function S() {
  let t4 = m, e = t4.crypto || t4.msCrypto, n = () => Math.random() * 16;
  try {
    if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
    e && e.getRandomValues && (n = () => {
      let r = new Uint8Array(1);
      return e.getRandomValues(r), r[0];
    });
  } catch {
  }
  return ("10000000100040008000" + 1e11).replace(/[018]/g, (r) => (r ^ (n() & 15) >> r / 4).toString(16));
}
function Hn(t4) {
  return t4.exception && t4.exception.values ? t4.exception.values[0] : void 0;
}
function Q(t4, e, n) {
  let r = t4.exception = t4.exception || {}, o = r.values = r.values || [], s = o[0] = o[0] || {};
  s.value || (s.value = e || ""), s.type || (s.type = n || "Error");
}
function B(t4, e) {
  let n = Hn(t4);
  if (!n) return;
  let r = { type: "generic", handled: true }, o = n.mechanism;
  if (n.mechanism = { ...r, ...o, ...e }, e && "data" in e) {
    let s = { ...o && o.data, ...e.data };
    n.mechanism.data = s;
  }
}
function Ie(t4) {
  if (t4 && t4.__sentry_captured__) return true;
  try {
    U(t4, "__sentry_captured__", true);
  } catch {
  }
  return false;
}
function ee(t4) {
  return Array.isArray(t4) ? t4 : [t4];
}
function b(t4, e = 100, n = 1 / 0) {
  try {
    return Xe("", t4, e, n);
  } catch (r) {
    return { ERROR: `**non-serializable** (${r})` };
  }
}
function Y(t4, e = 3, n = 100 * 1024) {
  let r = b(t4, e);
  return Jn(r) > n ? Y(t4, e - 1, n) : r;
}
function Xe(t4, e, n = 1 / 0, r = 1 / 0, o = Lt()) {
  let [s, i] = o;
  if (e == null || ["number", "boolean", "string"].includes(typeof e) && !Number.isNaN(e)) return e;
  let a = qn(t4, e);
  if (!a.startsWith("[object ")) return a;
  if (e.__sentry_skip_normalization__) return e;
  let c = typeof e.__sentry_override_normalization_depth__ == "number" ? e.__sentry_override_normalization_depth__ : n;
  if (c === 0) return a.replace("object ", "");
  if (s(e)) return "[Circular ~]";
  let u = e;
  if (u && typeof u.toJSON == "function") try {
    let g = u.toJSON();
    return Xe("", g, c - 1, r, o);
  } catch {
  }
  let f = Array.isArray(e) ? [] : {}, p = 0, l = le(e);
  for (let g in l) {
    if (!Object.prototype.hasOwnProperty.call(l, g)) continue;
    if (p >= r) {
      f[g] = "[MaxProperties ~]";
      break;
    }
    let h = l[g];
    f[g] = Xe(g, h, c - 1, r, o), p++;
  }
  return i(e), f;
}
function qn(t4, e) {
  try {
    if (t4 === "domain" && e && typeof e == "object" && e._events) return "[Domain]";
    if (t4 === "domainEmitter") return "[DomainEmitter]";
    if (typeof global < "u" && e === global) return "[Global]";
    if (typeof window < "u" && e === window) return "[Window]";
    if (typeof document < "u" && e === document) return "[Document]";
    if (Ge(e)) return "[VueViewModel]";
    if (je(e)) return "[SyntheticEvent]";
    if (typeof e == "number" && e !== e) return "[NaN]";
    if (typeof e == "function") return `[Function: ${V(e)}]`;
    if (typeof e == "symbol") return `[${String(e)}]`;
    if (typeof e == "bigint") return `[BigInt: ${String(e)}]`;
    let n = zn(e);
    return /^HTML(\w*)Element$/.test(n) ? `[HTMLElement: ${n}]` : `[object ${n}]`;
  } catch (n) {
    return `**non-serializable** (${n})`;
  }
}
function zn(t4) {
  let e = Object.getPrototypeOf(t4);
  return e ? e.constructor.name : "null prototype";
}
function Yn(t4) {
  return ~-encodeURI(t4).split(/%..|./).length;
}
function Jn(t4) {
  return Yn(JSON.stringify(t4));
}
function Wn(t4, e) {
  let n = 0;
  for (let r = t4.length - 1; r >= 0; r--) {
    let o = t4[r];
    o === "." ? t4.splice(r, 1) : o === ".." ? (t4.splice(r, 1), n++) : n && (t4.splice(r, 1), n--);
  }
  if (e) for (; n--; n) t4.unshift("..");
  return t4;
}
var Kn = /^(\S+:\\|\/?)([\s\S]*?)((?:\.{1,2}|[^/\\]+?|)(\.[^./\\]*|))(?:[/\\]*)$/;
function Vn(t4) {
  let e = t4.length > 1024 ? `<truncated>${t4.slice(-1024)}` : t4, n = Kn.exec(e);
  return n ? n.slice(1) : [];
}
function Ze(...t4) {
  let e = "", n = false;
  for (let r = t4.length - 1; r >= -1 && !n; r--) {
    let o = r >= 0 ? t4[r] : "/";
    o && (e = `${o}/${e}`, n = o.charAt(0) === "/");
  }
  return e = Wn(e.split("/").filter((r) => !!r), !n).join("/"), (n ? "/" : "") + e || ".";
}
function Ft(t4) {
  let e = 0;
  for (; e < t4.length && t4[e] === ""; e++) ;
  let n = t4.length - 1;
  for (; n >= 0 && t4[n] === ""; n--) ;
  return e > n ? [] : t4.slice(e, n - e + 1);
}
function Qe(t4, e) {
  t4 = Ze(t4).slice(1), e = Ze(e).slice(1);
  let n = Ft(t4.split("/")), r = Ft(e.split("/")), o = Math.min(n.length, r.length), s = o;
  for (let a = 0; a < o; a++) if (n[a] !== r[a]) {
    s = a;
    break;
  }
  let i = [];
  for (let a = s; a < n.length; a++) i.push("..");
  return i = i.concat(r.slice(s)), i.join("/");
}
function te(t4, e) {
  let n = Vn(t4)[2];
  return e && n.slice(e.length * -1) === e && (n = n.slice(0, n.length - e.length)), n;
}
var N;
(function(t4) {
  t4[t4.PENDING = 0] = "PENDING";
  let n = 1;
  t4[t4.RESOLVED = n] = "RESOLVED";
  let r = 2;
  t4[t4.REJECTED = r] = "REJECTED";
})(N || (N = {}));
function I(t4) {
  return new R((e) => {
    e(t4);
  });
}
function $(t4) {
  return new R((e, n) => {
    n(t4);
  });
}
var R = class t {
  constructor(e) {
    t.prototype.__init.call(this), t.prototype.__init2.call(this), t.prototype.__init3.call(this), t.prototype.__init4.call(this), this._state = N.PENDING, this._handlers = [];
    try {
      e(this._resolve, this._reject);
    } catch (n) {
      this._reject(n);
    }
  }
  then(e, n) {
    return new t((r, o) => {
      this._handlers.push([false, (s) => {
        if (!e) r(s);
        else try {
          r(e(s));
        } catch (i) {
          o(i);
        }
      }, (s) => {
        if (!n) o(s);
        else try {
          r(n(s));
        } catch (i) {
          o(i);
        }
      }]), this._executeHandlers();
    });
  }
  catch(e) {
    return this.then((n) => n, e);
  }
  finally(e) {
    return new t((n, r) => {
      let o, s;
      return this.then((i) => {
        s = false, o = i, e && e();
      }, (i) => {
        s = true, o = i, e && e();
      }).then(() => {
        if (s) {
          r(o);
          return;
        }
        n(o);
      });
    });
  }
  __init() {
    this._resolve = (e) => {
      this._setResult(N.RESOLVED, e);
    };
  }
  __init2() {
    this._reject = (e) => {
      this._setResult(N.REJECTED, e);
    };
  }
  __init3() {
    this._setResult = (e, n) => {
      if (this._state === N.PENDING) {
        if (C(n)) {
          n.then(this._resolve, this._reject);
          return;
        }
        this._state = e, this._value = n, this._executeHandlers();
      }
    };
  }
  __init4() {
    this._executeHandlers = () => {
      if (this._state === N.PENDING) return;
      let e = this._handlers.slice();
      this._handlers = [], e.forEach((n) => {
        n[0] || (this._state === N.RESOLVED && n[1](this._value), this._state === N.REJECTED && n[2](this._value), n[0] = true);
      });
    };
  }
};
function et(t4) {
  let e = [];
  function n() {
    return t4 === void 0 || e.length < t4;
  }
  function r(i) {
    return e.splice(e.indexOf(i), 1)[0];
  }
  function o(i) {
    if (!n()) return $(new y("Not adding Promise because buffer limit was reached."));
    let a = i();
    return e.indexOf(a) === -1 && e.push(a), a.then(() => r(a)).then(null, () => r(a).then(null, () => {
    })), a;
  }
  function s(i) {
    return new R((a, c) => {
      let u = e.length;
      if (!u) return a(true);
      let f = setTimeout(() => {
        i && i > 0 && a(false);
      }, i);
      e.forEach((p) => {
        I(p).then(() => {
          --u || (clearTimeout(f), a(true));
        }, c);
      });
    });
  }
  return { $: e, add: o, drain: s };
}
function Ut(t4, e = false) {
  return !(e || t4 && !t4.startsWith("/") && !t4.match(/^[A-Z]:/) && !t4.startsWith(".") && !t4.match(/^[a-zA-Z]([a-zA-Z0-9.\-+])*:\/\//)) && t4 !== void 0 && !t4.includes("node_modules/");
}
function Bt(t4) {
  let e = /^\s*[-]{4,}$/, n = /at (?:async )?(?:(.+?)\s+\()?(?:(.+):(\d+):(\d+)?|([^)]+))\)?/;
  return (r) => {
    let o = r.match(n);
    if (o) {
      let s, i, a, c, u;
      if (o[1]) {
        a = o[1];
        let l = a.lastIndexOf(".");
        if (a[l - 1] === "." && l--, l > 0) {
          s = a.slice(0, l), i = a.slice(l + 1);
          let g = s.indexOf(".Module");
          g > 0 && (a = a.slice(g + 1), s = s.slice(0, g));
        }
        c = void 0;
      }
      i && (c = s, u = i), i === "<anonymous>" && (u = void 0, a = void 0), a === void 0 && (u = u || me, a = c ? `${c}.${u}` : u);
      let f = o[2] && o[2].startsWith("file://") ? o[2].slice(7) : o[2], p = o[5] === "native";
      return f && f.match(/\/[A-Z]:/) && (f = f.slice(1)), !f && o[5] && !p && (f = o[5]), { filename: f, module: t4 ? t4(f) : void 0, function: a, lineno: parseInt(o[3], 10) || void 0, colno: parseInt(o[4], 10) || void 0, in_app: Ut(f, p) };
    }
    if (r.match(e)) return { filename: r };
  };
}
function tt(t4) {
  return [90, Bt(t4)];
}
function P(t4, e = []) {
  return [t4, e];
}
function rt(t4, e) {
  let [n, r] = t4;
  return [n, [...r, e]];
}
function xe(t4, e) {
  let n = t4[1];
  for (let r of n) {
    let o = r[0].type;
    if (e(r, o)) return true;
  }
  return false;
}
function nt(t4) {
  return m.__SENTRY__ && m.__SENTRY__.encodePolyfill ? m.__SENTRY__.encodePolyfill(t4) : new TextEncoder().encode(t4);
}
function ot(t4) {
  let [e, n] = t4, r = JSON.stringify(e);
  function o(s) {
    typeof r == "string" ? r = typeof s == "string" ? r + s : [nt(r), s] : r.push(typeof s == "string" ? nt(s) : s);
  }
  for (let s of n) {
    let [i, a] = s;
    if (o(`
${JSON.stringify(i)}
`), typeof a == "string" || a instanceof Uint8Array) o(a);
    else {
      let c;
      try {
        c = JSON.stringify(a);
      } catch {
        c = JSON.stringify(b(a));
      }
      o(c);
    }
  }
  return typeof r == "string" ? r : Xn(r);
}
function Xn(t4) {
  let e = t4.reduce((o, s) => o + s.length, 0), n = new Uint8Array(e), r = 0;
  for (let o of t4) n.set(o, r), r += o.length;
  return n;
}
function st(t4) {
  let e = typeof t4.data == "string" ? nt(t4.data) : t4.data;
  return [E({ type: "attachment", length: e.length, filename: t4.filename, content_type: t4.contentType, attachment_type: t4.attachmentType }), e];
}
var Zn = { session: "session", sessions: "session", attachment: "attachment", transaction: "transaction", event: "error", client_report: "internal", user_report: "default", profile: "profile", profile_chunk: "profile", replay_event: "replay", replay_recording: "replay", check_in: "monitor", feedback: "feedback", span: "span", statsd: "metric_bucket" };
function Ae(t4) {
  return Zn[t4];
}
function be(t4) {
  if (!t4 || !t4.sdk) return;
  let { name: e, version: n } = t4.sdk;
  return { name: e, version: n };
}
function it(t4, e, n, r) {
  let o = t4.sdkProcessingMetadata && t4.sdkProcessingMetadata.dynamicSamplingContext;
  return { event_id: t4.event_id, sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...e && { sdk: e }, ...!!n && r && { dsn: M(r) }, ...o && { trace: E({ ...o }) } };
}
function $t(t4, e = Date.now()) {
  let n = parseInt(`${t4}`, 10);
  if (!isNaN(n)) return n * 1e3;
  let r = Date.parse(`${t4}`);
  return isNaN(r) ? 6e4 : r - e;
}
function jt(t4, e) {
  return t4[e] || t4.all || 0;
}
function at(t4, e, n = Date.now()) {
  return jt(t4, e) > n;
}
function ct(t4, { statusCode: e, headers: n }, r = Date.now()) {
  let o = { ...t4 }, s = n && n["x-sentry-rate-limits"], i = n && n["retry-after"];
  if (s) for (let a of s.trim().split(",")) {
    let [c, u, , , f] = a.split(":", 5), p = parseInt(c, 10), l = (isNaN(p) ? 60 : p) * 1e3;
    if (!u) o.all = r + l;
    else for (let g of u.split(";")) g === "metric_bucket" ? (!f || f.split(";").includes("custom")) && (o[g] = r + l) : o[g] = r + l;
  }
  else i ? o.all = r + $t(i, r) : e === 429 && (o.all = r + 60 * 1e3);
  return o;
}
function ut(t4, e) {
  return t4(e.stack || "", 1);
}
function Gt(t4, e) {
  let n = { type: e.name || e.constructor.name, value: e.message }, r = ut(t4, e);
  return r.length && (n.stacktrace = { frames: r }), n;
}
function Qn(t4) {
  for (let e in t4) if (Object.prototype.hasOwnProperty.call(t4, e)) {
    let n = t4[e];
    if (n instanceof Error) return n;
  }
}
function er(t4) {
  if ("name" in t4 && typeof t4.name == "string") {
    let r = `'${t4.name}' captured as exception`;
    return "message" in t4 && typeof t4.message == "string" && (r += ` with message '${t4.message}'`), r;
  } else if ("message" in t4 && typeof t4.message == "string") return t4.message;
  let e = K(t4);
  if (Fe(t4)) return `Event \`ErrorEvent\` captured as exception with message \`${t4.message}\``;
  let n = tr(t4);
  return `${n && n !== "Object" ? `'${n}'` : "Object"} captured as exception with keys: ${e}`;
}
function tr(t4) {
  try {
    let e = Object.getPrototypeOf(t4);
    return e ? e.constructor.name : void 0;
  } catch {
  }
}
function nr(t4, e, n, r) {
  if (F(n)) return [n, void 0];
  if (e.synthetic = true, A(n)) {
    let s = t4 && t4.getOptions().normalizeDepth, i = { __serialized__: Y(n, s) }, a = Qn(n);
    if (a) return [a, i];
    let c = er(n), u = r && r.syntheticException || new Error(c);
    return u.message = c, [u, i];
  }
  let o = r && r.syntheticException || new Error(n);
  return o.message = `${n}`, [o, void 0];
}
function pt(t4, e, n, r) {
  let s = r && r.data && r.data.mechanism || { handled: true, type: "generic" }, [i, a] = nr(t4, s, n, r), c = { exception: { values: [Gt(e, i)] } };
  return a && (c.extra = a), Q(c, void 0, void 0), B(c, s), { ...c, event_id: r && r.event_id };
}
function ft(t4, e, n = "info", r, o) {
  let s = { event_id: r && r.event_id, level: n };
  if (o && r && r.syntheticException) {
    let i = ut(t4, r.syntheticException);
    i.length && (s.exception = { values: [{ value: e, stacktrace: { frames: i } }] });
  }
  if (H(e)) {
    let { __sentry_template_string__: i, __sentry_template_values__: a } = e;
    return s.logentry = { message: i, params: a }, s;
  }
  return s.message = e, s;
}
function Re() {
  return { traceId: S(), spanId: S().substring(16) };
}
var _ = typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__;
function w() {
  return ne(m), m;
}
function ne(t4) {
  let e = t4.__SENTRY__ = t4.__SENTRY__ || {};
  return e.version = e.version || D, e[D] = e[D] || {};
}
function re(t4, e = {}) {
  if (e.user && (!t4.ipAddress && e.user.ip_address && (t4.ipAddress = e.user.ip_address), !t4.did && !e.did && (t4.did = e.user.id || e.user.email || e.user.username)), t4.timestamp = e.timestamp || Z(), e.abnormal_mechanism && (t4.abnormal_mechanism = e.abnormal_mechanism), e.ignoreDuration && (t4.ignoreDuration = e.ignoreDuration), e.sid && (t4.sid = e.sid.length === 32 ? e.sid : S()), e.init !== void 0 && (t4.init = e.init), !t4.did && e.did && (t4.did = `${e.did}`), typeof e.started == "number" && (t4.started = e.started), t4.ignoreDuration) t4.duration = void 0;
  else if (typeof e.duration == "number") t4.duration = e.duration;
  else {
    let n = t4.timestamp - t4.started;
    t4.duration = n >= 0 ? n : 0;
  }
  e.release && (t4.release = e.release), e.environment && (t4.environment = e.environment), !t4.ipAddress && e.ipAddress && (t4.ipAddress = e.ipAddress), !t4.userAgent && e.userAgent && (t4.userAgent = e.userAgent), typeof e.errors == "number" && (t4.errors = e.errors), e.status && (t4.status = e.status);
}
var dt = "_sentrySpan";
function lt(t4, e) {
  e ? U(t4, dt, e) : delete t4[dt];
}
function j(t4) {
  return t4[dt];
}
var or = 100;
var mt = class t2 {
  constructor() {
    this._notifyingListeners = false, this._scopeListeners = [], this._eventProcessors = [], this._breadcrumbs = [], this._attachments = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}, this._sdkProcessingMetadata = {}, this._propagationContext = Re();
  }
  clone() {
    let e = new t2();
    return e._breadcrumbs = [...this._breadcrumbs], e._tags = { ...this._tags }, e._extra = { ...this._extra }, e._contexts = { ...this._contexts }, e._user = this._user, e._level = this._level, e._session = this._session, e._transactionName = this._transactionName, e._fingerprint = this._fingerprint, e._eventProcessors = [...this._eventProcessors], e._requestSession = this._requestSession, e._attachments = [...this._attachments], e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }, e._propagationContext = { ...this._propagationContext }, e._client = this._client, e._lastEventId = this._lastEventId, lt(e, j(this)), e;
  }
  setClient(e) {
    this._client = e;
  }
  setLastEventId(e) {
    this._lastEventId = e;
  }
  getClient() {
    return this._client;
  }
  lastEventId() {
    return this._lastEventId;
  }
  addScopeListener(e) {
    this._scopeListeners.push(e);
  }
  addEventProcessor(e) {
    return this._eventProcessors.push(e), this;
  }
  setUser(e) {
    return this._user = e || { email: void 0, id: void 0, ip_address: void 0, username: void 0 }, this._session && re(this._session, { user: e }), this._notifyScopeListeners(), this;
  }
  getUser() {
    return this._user;
  }
  getRequestSession() {
    return this._requestSession;
  }
  setRequestSession(e) {
    return this._requestSession = e, this;
  }
  setTags(e) {
    return this._tags = { ...this._tags, ...e }, this._notifyScopeListeners(), this;
  }
  setTag(e, n) {
    return this._tags = { ...this._tags, [e]: n }, this._notifyScopeListeners(), this;
  }
  setExtras(e) {
    return this._extra = { ...this._extra, ...e }, this._notifyScopeListeners(), this;
  }
  setExtra(e, n) {
    return this._extra = { ...this._extra, [e]: n }, this._notifyScopeListeners(), this;
  }
  setFingerprint(e) {
    return this._fingerprint = e, this._notifyScopeListeners(), this;
  }
  setLevel(e) {
    return this._level = e, this._notifyScopeListeners(), this;
  }
  setTransactionName(e) {
    return this._transactionName = e, this._notifyScopeListeners(), this;
  }
  setContext(e, n) {
    return n === null ? delete this._contexts[e] : this._contexts[e] = n, this._notifyScopeListeners(), this;
  }
  setSession(e) {
    return e ? this._session = e : delete this._session, this._notifyScopeListeners(), this;
  }
  getSession() {
    return this._session;
  }
  update(e) {
    if (!e) return this;
    let n = typeof e == "function" ? e(this) : e, [r, o] = n instanceof x ? [n.getScopeData(), n.getRequestSession()] : A(n) ? [e, e.requestSession] : [], { tags: s, extra: i, user: a, contexts: c, level: u, fingerprint: f = [], propagationContext: p } = r || {};
    return this._tags = { ...this._tags, ...s }, this._extra = { ...this._extra, ...i }, this._contexts = { ...this._contexts, ...c }, a && Object.keys(a).length && (this._user = a), u && (this._level = u), f.length && (this._fingerprint = f), p && (this._propagationContext = p), o && (this._requestSession = o), this;
  }
  clear() {
    return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, this._requestSession = void 0, this._session = void 0, lt(this, void 0), this._attachments = [], this._propagationContext = Re(), this._notifyScopeListeners(), this;
  }
  addBreadcrumb(e, n) {
    let r = typeof n == "number" ? n : or;
    if (r <= 0) return this;
    let o = { timestamp: z(), ...e }, s = this._breadcrumbs;
    return s.push(o), this._breadcrumbs = s.length > r ? s.slice(-r) : s, this._notifyScopeListeners(), this;
  }
  getLastBreadcrumb() {
    return this._breadcrumbs[this._breadcrumbs.length - 1];
  }
  clearBreadcrumbs() {
    return this._breadcrumbs = [], this._notifyScopeListeners(), this;
  }
  addAttachment(e) {
    return this._attachments.push(e), this;
  }
  clearAttachments() {
    return this._attachments = [], this;
  }
  getScopeData() {
    return { breadcrumbs: this._breadcrumbs, attachments: this._attachments, contexts: this._contexts, tags: this._tags, extra: this._extra, user: this._user, level: this._level, fingerprint: this._fingerprint || [], eventProcessors: this._eventProcessors, propagationContext: this._propagationContext, sdkProcessingMetadata: this._sdkProcessingMetadata, transactionName: this._transactionName, span: j(this) };
  }
  setSDKProcessingMetadata(e) {
    return this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...e }, this;
  }
  setPropagationContext(e) {
    return this._propagationContext = e, this;
  }
  getPropagationContext() {
    return this._propagationContext;
  }
  captureException(e, n) {
    let r = n && n.event_id ? n.event_id : S();
    if (!this._client) return d.warn("No client configured on scope - will not capture exception!"), r;
    let o = new Error("Sentry syntheticException");
    return this._client.captureException(e, { originalException: e, syntheticException: o, ...n, event_id: r }, this), r;
  }
  captureMessage(e, n, r) {
    let o = r && r.event_id ? r.event_id : S();
    if (!this._client) return d.warn("No client configured on scope - will not capture message!"), o;
    let s = new Error(e);
    return this._client.captureMessage(e, n, { originalException: e, syntheticException: s, ...r, event_id: o }, this), o;
  }
  captureEvent(e, n) {
    let r = n && n.event_id ? n.event_id : S();
    return this._client ? (this._client.captureEvent(e, { ...n, event_id: r }, this), r) : (d.warn("No client configured on scope - will not capture event!"), r);
  }
  _notifyScopeListeners() {
    this._notifyingListeners || (this._notifyingListeners = true, this._scopeListeners.forEach((e) => {
      e(this);
    }), this._notifyingListeners = false);
  }
};
var x = mt;
function Ht() {
  return q("defaultCurrentScope", () => new x());
}
function qt() {
  return q("defaultIsolationScope", () => new x());
}
var gt = class {
  constructor(e, n) {
    let r;
    e ? r = e : r = new x();
    let o;
    n ? o = n : o = new x(), this._stack = [{ scope: r }], this._isolationScope = o;
  }
  withScope(e) {
    let n = this._pushScope(), r;
    try {
      r = e(n);
    } catch (o) {
      throw this._popScope(), o;
    }
    return C(r) ? r.then((o) => (this._popScope(), o), (o) => {
      throw this._popScope(), o;
    }) : (this._popScope(), r);
  }
  getClient() {
    return this.getStackTop().client;
  }
  getScope() {
    return this.getStackTop().scope;
  }
  getIsolationScope() {
    return this._isolationScope;
  }
  getStack() {
    return this._stack;
  }
  getStackTop() {
    return this._stack[this._stack.length - 1];
  }
  _pushScope() {
    let e = this.getScope().clone();
    return this.getStack().push({ client: this.getClient(), scope: e }), e;
  }
  _popScope() {
    return this.getStack().length <= 1 ? false : !!this.getStack().pop();
  }
};
function J() {
  let t4 = w(), e = ne(t4);
  return e.stack = e.stack || new gt(Ht(), qt());
}
function sr(t4) {
  return J().withScope(t4);
}
function ir(t4, e) {
  let n = J();
  return n.withScope(() => (n.getStackTop().scope = t4, e(t4)));
}
function zt(t4) {
  return J().withScope(() => t4(J().getIsolationScope()));
}
function Yt() {
  return { withIsolationScope: zt, withScope: sr, withSetScope: ir, withSetIsolationScope: (t4, e) => zt(e), getCurrentScope: () => J().getScope(), getIsolationScope: () => J().getIsolationScope() };
}
function oe(t4) {
  let e = ne(t4);
  return e.acs ? e.acs : Yt();
}
function ht() {
  let t4 = w();
  return oe(t4).getCurrentScope();
}
function G() {
  let t4 = w();
  return oe(t4).getIsolationScope();
}
function Jt() {
  return q("globalScope", () => new x());
}
function Wt() {
  return ht().getClient();
}
var ar = "_sentryMetrics";
function Kt(t4) {
  let e = t4[ar];
  if (!e) return;
  let n = {};
  for (let [, [r, o]] of e) n[r] || (n[r] = []), n[r].push(E(o));
  return n;
}
var Vt = "sentry.source";
var Xt = "sentry.sample_rate";
var Zt = "sentry.op";
var Qt = "sentry.origin";
var cr = 1;
function Ce(t4) {
  let { spanId: e, traceId: n } = t4.spanContext(), { parent_span_id: r } = W(t4);
  return E({ parent_span_id: r, span_id: e, trace_id: n });
}
function en(t4) {
  return typeof t4 == "number" ? tn(t4) : Array.isArray(t4) ? t4[0] + t4[1] / 1e9 : t4 instanceof Date ? tn(t4.getTime()) : Z();
}
function tn(t4) {
  return t4 > 9999999999 ? t4 / 1e3 : t4;
}
function W(t4) {
  if (pr(t4)) return t4.getSpanJSON();
  try {
    let { spanId: e, traceId: n } = t4.spanContext();
    if (ur(t4)) {
      let { attributes: r, startTime: o, name: s, endTime: i, parentSpanId: a, status: c } = t4;
      return E({ span_id: e, trace_id: n, data: r, description: s, parent_span_id: a, start_timestamp: en(o), timestamp: en(i) || void 0, status: fr(c), op: r[Zt], origin: r[Qt], _metrics_summary: Kt(t4) });
    }
    return { span_id: e, trace_id: n };
  } catch {
    return {};
  }
}
function ur(t4) {
  let e = t4;
  return !!e.attributes && !!e.startTime && !!e.name && !!e.endTime && !!e.status;
}
function pr(t4) {
  return typeof t4.getSpanJSON == "function";
}
function nn(t4) {
  let { traceFlags: e } = t4.spanContext();
  return e === cr;
}
function fr(t4) {
  if (!(!t4 || t4.code === 0)) return t4.code === 1 ? "ok" : t4.message || "unknown_error";
}
var dr = "_sentryRootSpan";
function L(t4) {
  return t4[dr] || t4;
}
function rn() {
  let t4 = w(), e = oe(t4);
  return e.getActiveSpan ? e.getActiveSpan() : j(ht());
}
var on = false;
function sn() {
  on || (on = true, Ke(_t), Ve(_t));
}
function _t() {
  let t4 = rn(), e = t4 && L(t4);
  if (e) {
    let n = "internal_error";
    _ && d.log(`[Tracing] Root span: ${n} -> Global error occured`), e.setStatus({ code: 2, message: n });
  }
}
_t.tag = "sentry_tracingErrorCallback";
var Oe = "production";
var lr = "_frozenDsc";
function se(t4, e) {
  let n = e.getOptions(), { publicKey: r } = e.getDsn() || {}, o = E({ environment: n.environment || Oe, release: n.release, public_key: r, trace_id: t4 });
  return e.emit("createDsc", o), o;
}
function Ne(t4) {
  let e = Wt();
  if (!e) return {};
  let n = se(W(t4).trace_id || "", e), r = L(t4);
  if (!r) return n;
  let o = r[lr];
  if (o) return o;
  let s = W(r), i = s.data || {}, a = i[Xt];
  a != null && (n.sample_rate = `${a}`);
  let c = i[Vt];
  return c && c !== "url" && (n.transaction = s.description), n.sampled = String(nn(r)), e.emit("createDsc", n), n;
}
function an(t4) {
  if (typeof t4 == "boolean") return Number(t4);
  let e = typeof t4 == "string" ? parseFloat(t4) : t4;
  if (typeof e != "number" || isNaN(e) || e < 0 || e > 1) {
    _ && d.warn(`[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(t4)} of type ${JSON.stringify(typeof t4)}.`);
    return;
  }
  return e;
}
function mr(t4, e) {
  return e && (t4.sdk = t4.sdk || {}, t4.sdk.name = t4.sdk.name || e.name, t4.sdk.version = t4.sdk.version || e.version, t4.sdk.integrations = [...t4.sdk.integrations || [], ...e.integrations || []], t4.sdk.packages = [...t4.sdk.packages || [], ...e.packages || []]), t4;
}
function cn(t4, e, n, r) {
  let o = be(n), s = { sent_at: (/* @__PURE__ */ new Date()).toISOString(), ...o && { sdk: o }, ...!!r && e && { dsn: M(e) } }, i = "aggregates" in t4 ? [{ type: "sessions" }, t4] : [{ type: "session" }, t4.toJSON()];
  return P(s, [i]);
}
function un(t4, e, n, r) {
  let o = be(n), s = t4.type && t4.type !== "replay_event" ? t4.type : "event";
  mr(t4, n && n.sdk);
  let i = it(t4, o, r, e);
  return delete t4.sdkProcessingMetadata, P(i, [[{ type: s }, t4]]);
}
function ke(t4, e, n, r = 0) {
  return new R((o, s) => {
    let i = t4[r];
    if (e === null || typeof i != "function") o(e);
    else {
      let a = i({ ...e }, n);
      _ && i.id && a === null && d.log(`Event processor "${i.id}" dropped event`), C(a) ? a.then((c) => ke(t4, c, n, r + 1).then(o)).then(null, s) : ke(t4, a, n, r + 1).then(o).then(null, s);
    }
  });
}
function pn(t4, e) {
  let { fingerprint: n, span: r, breadcrumbs: o, sdkProcessingMetadata: s } = e;
  gr(t4, e), r && Er(t4, r), Sr(t4, n), hr(t4, o), _r(t4, s);
}
function Et(t4, e) {
  let { extra: n, tags: r, user: o, contexts: s, level: i, sdkProcessingMetadata: a, breadcrumbs: c, fingerprint: u, eventProcessors: f, attachments: p, propagationContext: l, transactionName: g, span: h } = e;
  ie(t4, "extra", n), ie(t4, "tags", r), ie(t4, "user", o), ie(t4, "contexts", s), ie(t4, "sdkProcessingMetadata", a), i && (t4.level = i), g && (t4.transactionName = g), h && (t4.span = h), c.length && (t4.breadcrumbs = [...t4.breadcrumbs, ...c]), u.length && (t4.fingerprint = [...t4.fingerprint, ...u]), f.length && (t4.eventProcessors = [...t4.eventProcessors, ...f]), p.length && (t4.attachments = [...t4.attachments, ...p]), t4.propagationContext = { ...t4.propagationContext, ...l };
}
function ie(t4, e, n) {
  if (n && Object.keys(n).length) {
    t4[e] = { ...t4[e] };
    for (let r in n) Object.prototype.hasOwnProperty.call(n, r) && (t4[e][r] = n[r]);
  }
}
function gr(t4, e) {
  let { extra: n, tags: r, user: o, contexts: s, level: i, transactionName: a } = e, c = E(n);
  c && Object.keys(c).length && (t4.extra = { ...c, ...t4.extra });
  let u = E(r);
  u && Object.keys(u).length && (t4.tags = { ...u, ...t4.tags });
  let f = E(o);
  f && Object.keys(f).length && (t4.user = { ...f, ...t4.user });
  let p = E(s);
  p && Object.keys(p).length && (t4.contexts = { ...p, ...t4.contexts }), i && (t4.level = i), a && t4.type !== "transaction" && (t4.transaction = a);
}
function hr(t4, e) {
  let n = [...t4.breadcrumbs || [], ...e];
  t4.breadcrumbs = n.length ? n : void 0;
}
function _r(t4, e) {
  t4.sdkProcessingMetadata = { ...t4.sdkProcessingMetadata, ...e };
}
function Er(t4, e) {
  t4.contexts = { trace: Ce(e), ...t4.contexts }, t4.sdkProcessingMetadata = { dynamicSamplingContext: Ne(e), ...t4.sdkProcessingMetadata };
  let n = L(e), r = W(n).description;
  r && !t4.transaction && t4.type === "transaction" && (t4.transaction = r);
}
function Sr(t4, e) {
  t4.fingerprint = t4.fingerprint ? ee(t4.fingerprint) : [], e && (t4.fingerprint = t4.fingerprint.concat(e)), t4.fingerprint && !t4.fingerprint.length && delete t4.fingerprint;
}
function dn(t4, e, n, r, o, s) {
  let { normalizeDepth: i = 3, normalizeMaxBreadth: a = 1e3 } = t4, c = { ...e, event_id: e.event_id || n.event_id || S(), timestamp: e.timestamp || z() }, u = n.integrations || t4.integrations.map((T) => T.name);
  yr(c, t4), xr(c, u), e.type === void 0 && Tr(c, t4.stackParser);
  let f = br(r, n.captureContext);
  n.mechanism && B(c, n.mechanism);
  let p = o ? o.getEventProcessors() : [], l = Jt().getScopeData();
  if (s) {
    let T = s.getScopeData();
    Et(l, T);
  }
  if (f) {
    let T = f.getScopeData();
    Et(l, T);
  }
  let g = [...n.attachments || [], ...l.attachments];
  g.length && (n.attachments = g), pn(c, l);
  let h = [...p, ...l.eventProcessors];
  return ke(h, c, n).then((T) => (T && Ir(T), typeof i == "number" && i > 0 ? Ar(T, i, a) : T));
}
function yr(t4, e) {
  let { environment: n, release: r, dist: o, maxValueLength: s = 250 } = e;
  "environment" in t4 || (t4.environment = "environment" in e ? n : Oe), t4.release === void 0 && r !== void 0 && (t4.release = r), t4.dist === void 0 && o !== void 0 && (t4.dist = o), t4.message && (t4.message = k(t4.message, s));
  let i = t4.exception && t4.exception.values && t4.exception.values[0];
  i && i.value && (i.value = k(i.value, s));
  let a = t4.request;
  a && a.url && (a.url = k(a.url, s));
}
var fn = /* @__PURE__ */ new WeakMap();
function Tr(t4, e) {
  let n = m._sentryDebugIds;
  if (!n) return;
  let r, o = fn.get(e);
  o ? r = o : (r = /* @__PURE__ */ new Map(), fn.set(e, r));
  let s = Object.keys(n).reduce((i, a) => {
    let c, u = r.get(a);
    u ? c = u : (c = e(a), r.set(a, c));
    for (let f = c.length - 1; f >= 0; f--) {
      let p = c[f];
      if (p.filename) {
        i[p.filename] = n[a];
        break;
      }
    }
    return i;
  }, {});
  try {
    t4.exception.values.forEach((i) => {
      i.stacktrace.frames.forEach((a) => {
        a.filename && (a.debug_id = s[a.filename]);
      });
    });
  } catch {
  }
}
function Ir(t4) {
  let e = {};
  try {
    t4.exception.values.forEach((r) => {
      r.stacktrace.frames.forEach((o) => {
        o.debug_id && (o.abs_path ? e[o.abs_path] = o.debug_id : o.filename && (e[o.filename] = o.debug_id), delete o.debug_id);
      });
    });
  } catch {
  }
  if (Object.keys(e).length === 0) return;
  t4.debug_meta = t4.debug_meta || {}, t4.debug_meta.images = t4.debug_meta.images || [];
  let n = t4.debug_meta.images;
  Object.keys(e).forEach((r) => {
    n.push({ type: "sourcemap", code_file: r, debug_id: e[r] });
  });
}
function xr(t4, e) {
  e.length > 0 && (t4.sdk = t4.sdk || {}, t4.sdk.integrations = [...t4.sdk.integrations || [], ...e]);
}
function Ar(t4, e, n) {
  if (!t4) return null;
  let r = { ...t4, ...t4.breadcrumbs && { breadcrumbs: t4.breadcrumbs.map((o) => ({ ...o, ...o.data && { data: b(o.data, e, n) } })) }, ...t4.user && { user: b(t4.user, e, n) }, ...t4.contexts && { contexts: b(t4.contexts, e, n) }, ...t4.extra && { extra: b(t4.extra, e, n) } };
  return t4.contexts && t4.contexts.trace && r.contexts && (r.contexts.trace = t4.contexts.trace, t4.contexts.trace.data && (r.contexts.trace.data = b(t4.contexts.trace.data, e, n))), t4.spans && (r.spans = t4.spans.map((o) => ({ ...o, ...o.data && { data: b(o.data, e, n) } }))), r;
}
function br(t4, e) {
  if (!e) return t4;
  let n = t4 ? t4.clone() : new x();
  return n.update(e), n;
}
var De = class {
  constructor(e, n) {
    this._client = e, this.flushTimeout = 60, this._pendingAggregates = {}, this._isEnabled = true, this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1e3), this._intervalId.unref && this._intervalId.unref(), this._sessionAttrs = n;
  }
  flush() {
    let e = this.getSessionAggregates();
    e.aggregates.length !== 0 && (this._pendingAggregates = {}, this._client.sendSession(e));
  }
  getSessionAggregates() {
    let e = Object.keys(this._pendingAggregates).map((r) => this._pendingAggregates[parseInt(r)]), n = { attrs: this._sessionAttrs, aggregates: e };
    return E(n);
  }
  close() {
    clearInterval(this._intervalId), this._isEnabled = false, this.flush();
  }
  incrementSessionStatusCount() {
    if (!this._isEnabled) return;
    let e = G(), n = e.getRequestSession();
    n && n.status && (this._incrementSessionStatusCount(n.status, /* @__PURE__ */ new Date()), e.setRequestSession(void 0));
  }
  _incrementSessionStatusCount(e, n) {
    let r = new Date(n).setSeconds(0, 0);
    this._pendingAggregates[r] = this._pendingAggregates[r] || {};
    let o = this._pendingAggregates[r];
    switch (o.started || (o.started = new Date(r).toISOString()), e) {
      case "errored":
        return o.errored = (o.errored || 0) + 1, o.errored;
      case "ok":
        return o.exited = (o.exited || 0) + 1, o.exited;
      default:
        return o.crashed = (o.crashed || 0) + 1, o.crashed;
    }
  }
};
var Rr = "7";
function Cr(t4) {
  let e = t4.protocol ? `${t4.protocol}:` : "", n = t4.port ? `:${t4.port}` : "";
  return `${e}//${t4.host}${n}${t4.path ? `/${t4.path}` : ""}/api/`;
}
function Or(t4) {
  return `${Cr(t4)}${t4.projectId}/envelope/`;
}
function Nr(t4, e) {
  return Ye({ sentry_key: t4.publicKey, sentry_version: Rr, ...e && { sentry_client: `${e.name}/${e.version}` } });
}
function ln(t4, e, n) {
  return e || `${Or(t4)}?${Nr(t4, n)}`;
}
var mn = [];
function kr(t4) {
  let e = {};
  return t4.forEach((n) => {
    let { name: r } = n, o = e[r];
    o && !o.isDefaultInstance && n.isDefaultInstance || (e[r] = n);
  }), Object.keys(e).map((n) => e[n]);
}
function St(t4) {
  let e = t4.defaultIntegrations || [], n = t4.integrations;
  e.forEach((i) => {
    i.isDefaultInstance = true;
  });
  let r;
  Array.isArray(n) ? r = [...e, ...n] : typeof n == "function" ? r = ee(n(e)) : r = e;
  let o = kr(r), s = Dr(o, (i) => i.name === "Debug");
  if (s !== -1) {
    let [i] = o.splice(s, 1);
    o.push(i);
  }
  return o;
}
function gn(t4, e) {
  let n = {};
  return e.forEach((r) => {
    r && Tt(t4, r, n);
  }), n;
}
function yt(t4, e) {
  for (let n of e) n && n.afterAllSetup && n.afterAllSetup(t4);
}
function Tt(t4, e, n) {
  if (n[e.name]) {
    _ && d.log(`Integration skipped because it was already installed: ${e.name}`);
    return;
  }
  if (n[e.name] = e, mn.indexOf(e.name) === -1 && typeof e.setupOnce == "function" && (e.setupOnce(), mn.push(e.name)), e.setup && typeof e.setup == "function" && e.setup(t4), typeof e.preprocessEvent == "function") {
    let r = e.preprocessEvent.bind(e);
    t4.on("preprocessEvent", (o, s) => r(o, s, t4));
  }
  if (typeof e.processEvent == "function") {
    let r = e.processEvent.bind(e), o = Object.assign((s, i) => r(s, i, t4), { id: e.name });
    t4.addEventProcessor(o);
  }
  _ && d.log(`Integration installed: ${e.name}`);
}
function Dr(t4, e) {
  for (let n = 0; n < t4.length; n++) if (e(t4[n]) === true) return n;
  return -1;
}
var hn = "Not capturing exception because it's already been captured.";
var ve = class {
  constructor(e) {
    if (this._options = e, this._integrations = {}, this._numProcessing = 0, this._outcomes = {}, this._hooks = {}, this._eventProcessors = [], e.dsn ? this._dsn = de(e.dsn) : _ && d.warn("No DSN provided, client will not send events."), this._dsn) {
      let n = ln(this._dsn, e.tunnel, e._metadata ? e._metadata.sdk : void 0);
      this._transport = e.transport({ tunnel: this._options.tunnel, recordDroppedEvent: this.recordDroppedEvent.bind(this), ...e.transportOptions, url: n });
    }
  }
  captureException(e, n, r) {
    let o = S();
    if (Ie(e)) return _ && d.log(hn), o;
    let s = { event_id: o, ...n };
    return this._process(this.eventFromException(e, s).then((i) => this._captureEvent(i, s, r))), s.event_id;
  }
  captureMessage(e, n, r, o) {
    let s = { event_id: S(), ...r }, i = H(e) ? e : String(e), a = pe(e) ? this.eventFromMessage(i, n, s) : this.eventFromException(e, s);
    return this._process(a.then((c) => this._captureEvent(c, s, o))), s.event_id;
  }
  captureEvent(e, n, r) {
    let o = S();
    if (n && n.originalException && Ie(n.originalException)) return _ && d.log(hn), o;
    let s = { event_id: o, ...n }, a = (e.sdkProcessingMetadata || {}).capturedSpanScope;
    return this._process(this._captureEvent(e, s, a || r)), s.event_id;
  }
  captureSession(e) {
    typeof e.release != "string" ? _ && d.warn("Discarded session because of missing or non-string release") : (this.sendSession(e), re(e, { init: false }));
  }
  getDsn() {
    return this._dsn;
  }
  getOptions() {
    return this._options;
  }
  getSdkMetadata() {
    return this._options._metadata;
  }
  getTransport() {
    return this._transport;
  }
  flush(e) {
    let n = this._transport;
    return n ? (this.emit("flush"), this._isClientDoneProcessing(e).then((r) => n.flush(e).then((o) => r && o))) : I(true);
  }
  close(e) {
    return this.flush(e).then((n) => (this.getOptions().enabled = false, this.emit("close"), n));
  }
  getEventProcessors() {
    return this._eventProcessors;
  }
  addEventProcessor(e) {
    this._eventProcessors.push(e);
  }
  init() {
    this._isEnabled() && this._setupIntegrations();
  }
  getIntegrationByName(e) {
    return this._integrations[e];
  }
  addIntegration(e) {
    let n = this._integrations[e.name];
    Tt(this, e, this._integrations), n || yt(this, [e]);
  }
  sendEvent(e, n = {}) {
    this.emit("beforeSendEvent", e, n);
    let r = un(e, this._dsn, this._options._metadata, this._options.tunnel);
    for (let s of n.attachments || []) r = rt(r, st(s));
    let o = this.sendEnvelope(r);
    o && o.then((s) => this.emit("afterSendEvent", e, s), null);
  }
  sendSession(e) {
    let n = cn(e, this._dsn, this._options._metadata, this._options.tunnel);
    this.sendEnvelope(n);
  }
  recordDroppedEvent(e, n, r) {
    if (this._options.sendClientReports) {
      let o = `${e}:${n}`;
      _ && d.log(`Adding outcome: "${o}"`), this._outcomes[o] = this._outcomes[o] + 1 || 1;
    }
  }
  on(e, n) {
    this._hooks[e] || (this._hooks[e] = []), this._hooks[e].push(n);
  }
  emit(e, ...n) {
    this._hooks[e] && this._hooks[e].forEach((r) => r(...n));
  }
  sendEnvelope(e) {
    return this.emit("beforeEnvelope", e), this._isEnabled() && this._transport ? this._transport.send(e).then(null, (n) => (_ && d.error("Error while sending event:", n), n)) : (_ && d.error("Transport disabled"), I({}));
  }
  _setupIntegrations() {
    let { integrations: e } = this._options;
    this._integrations = gn(this, e), yt(this, e);
  }
  _updateSessionFromEvent(e, n) {
    let r = false, o = false, s = n.exception && n.exception.values;
    if (s) {
      o = true;
      for (let c of s) {
        let u = c.mechanism;
        if (u && u.handled === false) {
          r = true;
          break;
        }
      }
    }
    let i = e.status === "ok";
    (i && e.errors === 0 || i && r) && (re(e, { ...r && { status: "crashed" }, errors: e.errors || Number(o || r) }), this.captureSession(e));
  }
  _isClientDoneProcessing(e) {
    return new R((n) => {
      let r = 0, o = 1, s = setInterval(() => {
        this._numProcessing == 0 ? (clearInterval(s), n(true)) : (r += o, e && r >= e && (clearInterval(s), n(false)));
      }, o);
    });
  }
  _isEnabled() {
    return this.getOptions().enabled !== false && this._transport !== void 0;
  }
  _prepareEvent(e, n, r, o = G()) {
    let s = this.getOptions(), i = Object.keys(this._integrations);
    return !n.integrations && i.length > 0 && (n.integrations = i), this.emit("preprocessEvent", e, n), e.type || o.setLastEventId(e.event_id || n.event_id), dn(s, e, n, r, this, o).then((a) => {
      if (a === null) return a;
      let c = { ...o.getPropagationContext(), ...r ? r.getPropagationContext() : void 0 };
      if (!(a.contexts && a.contexts.trace) && c) {
        let { traceId: f, spanId: p, parentSpanId: l, dsc: g } = c;
        a.contexts = { trace: E({ trace_id: f, span_id: p, parent_span_id: l }), ...a.contexts };
        let h = g || se(f, this);
        a.sdkProcessingMetadata = { dynamicSamplingContext: h, ...a.sdkProcessingMetadata };
      }
      return a;
    });
  }
  _captureEvent(e, n = {}, r) {
    return this._processEvent(e, n, r).then((o) => o.event_id, (o) => {
      if (_) {
        let s = o;
        s.logLevel === "log" ? d.log(s.message) : d.warn(s);
      }
    });
  }
  _processEvent(e, n, r) {
    let o = this.getOptions(), { sampleRate: s } = o, i = En(e), a = _n(e), c = e.type || "error", u = `before send for type \`${c}\``, f = typeof s > "u" ? void 0 : an(s);
    if (a && typeof f == "number" && Math.random() > f) return this.recordDroppedEvent("sample_rate", "error", e), $(new y(`Discarding event because it's not included in the random sample (sampling rate = ${s})`, "log"));
    let p = c === "replay_event" ? "replay" : c, g = (e.sdkProcessingMetadata || {}).capturedSpanIsolationScope;
    return this._prepareEvent(e, n, r, g).then((h) => {
      if (h === null) throw this.recordDroppedEvent("event_processor", p, e), new y("An event processor returned `null`, will not send event.", "log");
      if (n.data && n.data.__sentry__ === true) return h;
      let T = Mr(o, h, n);
      return vr(T, u);
    }).then((h) => {
      if (h === null) throw this.recordDroppedEvent("before_send", p, e), new y(`${u} returned \`null\`, will not send event.`, "log");
      let ce = r && r.getSession();
      !i && ce && this._updateSessionFromEvent(ce, h);
      let T = h.transaction_info;
      if (i && T && h.transaction !== e.transaction) {
        let Nn = "custom";
        h.transaction_info = { ...T, source: Nn };
      }
      return this.sendEvent(h, n), h;
    }).then(null, (h) => {
      throw h instanceof y ? h : (this.captureException(h, { data: { __sentry__: true }, originalException: h }), new y(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${h}`));
    });
  }
  _process(e) {
    this._numProcessing++, e.then((n) => (this._numProcessing--, n), (n) => (this._numProcessing--, n));
  }
  _clearOutcomes() {
    let e = this._outcomes;
    return this._outcomes = {}, Object.keys(e).map((n) => {
      let [r, o] = n.split(":");
      return { reason: r, category: o, quantity: e[n] };
    });
  }
};
function vr(t4, e) {
  let n = `${e} must return \`null\` or a valid event.`;
  if (C(t4)) return t4.then((r) => {
    if (!A(r) && r !== null) throw new y(n);
    return r;
  }, (r) => {
    throw new y(`${e} rejected with ${r}`);
  });
  if (!A(t4) && t4 !== null) throw new y(n);
  return t4;
}
function Mr(t4, e, n) {
  let { beforeSend: r, beforeSendTransaction: o, beforeSendSpan: s } = t4;
  if (_n(e) && r) return r(e, n);
  if (En(e)) {
    if (e.spans && s) {
      let i = [];
      for (let a of e.spans) {
        let c = s(a);
        c && i.push(c);
      }
      e.spans = i;
    }
    if (o) return o(e, n);
  }
  return e;
}
function _n(t4) {
  return t4.type === void 0;
}
function En(t4) {
  return t4.type === "transaction";
}
function Sn(t4, e, n, r, o) {
  let s = { sent_at: (/* @__PURE__ */ new Date()).toISOString() };
  n && n.sdk && (s.sdk = { name: n.sdk.name, version: n.sdk.version }), r && o && (s.dsn = M(o)), e && (s.trace = E(e));
  let i = Pr(t4);
  return P(s, [i]);
}
function Pr(t4) {
  return [{ type: "check_in" }, t4];
}
var ae = class extends ve {
  constructor(e) {
    sn(), super(e);
  }
  eventFromException(e, n) {
    return I(pt(this, this._options.stackParser, e, n));
  }
  eventFromMessage(e, n = "info", r) {
    return I(ft(this._options.stackParser, e, n, r, this._options.attachStacktrace));
  }
  captureException(e, n, r) {
    if (this._options.autoSessionTracking && this._sessionFlusher) {
      let o = G().getRequestSession();
      o && o.status === "ok" && (o.status = "errored");
    }
    return super.captureException(e, n, r);
  }
  captureEvent(e, n, r) {
    if (this._options.autoSessionTracking && this._sessionFlusher && (e.type || "exception") === "exception" && e.exception && e.exception.values && e.exception.values.length > 0) {
      let i = G().getRequestSession();
      i && i.status === "ok" && (i.status = "errored");
    }
    return super.captureEvent(e, n, r);
  }
  close(e) {
    return this._sessionFlusher && this._sessionFlusher.close(), super.close(e);
  }
  initSessionFlusher() {
    let { release: e, environment: n } = this._options;
    e ? this._sessionFlusher = new De(this, { release: e, environment: n }) : _ && d.warn("Cannot initialise an instance of SessionFlusher if no release is provided!");
  }
  captureCheckIn(e, n, r) {
    let o = "checkInId" in e && e.checkInId ? e.checkInId : S();
    if (!this._isEnabled()) return _ && d.warn("SDK not enabled, will not capture checkin."), o;
    let s = this.getOptions(), { release: i, environment: a, tunnel: c } = s, u = { check_in_id: o, monitor_slug: e.monitorSlug, status: e.status, release: i, environment: a };
    "duration" in e && (u.duration = e.duration), n && (u.monitor_config = { schedule: n.schedule, checkin_margin: n.checkinMargin, max_runtime: n.maxRuntime, timezone: n.timezone, failure_issue_threshold: n.failureIssueThreshold, recovery_threshold: n.recoveryThreshold });
    let [f, p] = this._getTraceInfoFromScope(r);
    p && (u.contexts = { trace: p });
    let l = Sn(u, f, this.getSdkMetadata(), c, this.getDsn());
    return _ && d.info("Sending checkin:", e.monitorSlug, e.status), this.sendEnvelope(l), o;
  }
  _captureRequestSession() {
    this._sessionFlusher ? this._sessionFlusher.incrementSessionStatusCount() : _ && d.warn("Discarded request mode session because autoSessionTracking option was disabled");
  }
  _prepareEvent(e, n, r, o) {
    return this._options.platform && (e.platform = e.platform || this._options.platform), this._options.runtime && (e.contexts = { ...e.contexts, runtime: (e.contexts || {}).runtime || this._options.runtime }), this._options.serverName && (e.server_name = e.server_name || this._options.serverName), super._prepareEvent(e, n, r, o);
  }
  _getTraceInfoFromScope(e) {
    if (!e) return [void 0, void 0];
    let n = j(e);
    if (n) {
      let c = L(n);
      return [Ne(c), Ce(c)];
    }
    let { traceId: r, spanId: o, parentSpanId: s, dsc: i } = e.getPropagationContext(), a = { trace_id: r, span_id: o, parent_span_id: s };
    return i ? [i, a] : [se(r, this), a];
  }
};
var wr = 64;
function It(t4, e, n = et(t4.bufferSize || wr)) {
  let r = {}, o = (i) => n.drain(i);
  function s(i) {
    let a = [];
    if (xe(i, (p, l) => {
      let g = Ae(l);
      if (at(r, g)) {
        let h = yn(p, l);
        t4.recordDroppedEvent("ratelimit_backoff", g, h);
      } else a.push(p);
    }), a.length === 0) return I({});
    let c = P(i[0], a), u = (p) => {
      xe(c, (l, g) => {
        let h = yn(l, g);
        t4.recordDroppedEvent(p, Ae(g), h);
      });
    }, f = () => e({ body: ot(c) }).then((p) => (p.statusCode !== void 0 && (p.statusCode < 200 || p.statusCode >= 300) && _ && d.warn(`Sentry responded with status code ${p.statusCode} to sent event.`), r = ct(r, p), p), (p) => {
      throw u("network_error"), p;
    });
    return n.add(f).then((p) => p, (p) => {
      if (p instanceof y) return _ && d.error("Skipped sending event because buffer is full."), u("queue_overflow"), I({});
      throw p;
    });
  }
  return { send: s, flush: o };
}
function yn(t4, e) {
  if (!(e !== "event" && e !== "transaction")) return Array.isArray(t4) ? t4[1] : void 0;
}
var Lr = "RewriteFrames";
var Me = (t4 = {}) => {
  let e = t4.root, n = t4.prefix || "app:///", r = "window" in m && m.window !== void 0, o = t4.iteratee || Fr({ isBrowser: r, root: e, prefix: n });
  function s(a) {
    try {
      return { ...a, exception: { ...a.exception, values: a.exception.values.map((c) => ({ ...c, ...c.stacktrace && { stacktrace: i(c.stacktrace) } })) } };
    } catch {
      return a;
    }
  }
  function i(a) {
    return { ...a, frames: a && a.frames && a.frames.map((c) => o(c)) };
  }
  return { name: Lr, processEvent(a) {
    let c = a;
    return a.exception && Array.isArray(a.exception.values) && (c = s(c)), c;
  } };
};
function Fr({ isBrowser: t4, root: e, prefix: n }) {
  return (r) => {
    if (!r.filename) return r;
    let o = /^[a-zA-Z]:\\/.test(r.filename) || r.filename.includes("\\") && !r.filename.includes("/"), s = /^\//.test(r.filename);
    if (t4) {
      if (e) {
        let i = r.filename;
        i.indexOf(e) === 0 && (r.filename = i.replace(e, n));
      }
    } else if (o || s) {
      let i = o ? r.filename.replace(/^[a-zA-Z]:/, "").replace(/\\/g, "/") : r.filename, a = e ? Qe(e, i) : te(i);
      r.filename = `${n}${a}`;
    }
    return r;
  };
}
function In(t4) {
  return typeof t4 == "object" && t4 !== null;
}
function Br(t4) {
  return In(t4) && "handled" in t4 && typeof t4.handled == "boolean" && "type" in t4 && typeof t4.type == "string";
}
function $r(t4) {
  return In(t4) && "mechanism" in t4 && Br(t4.mechanism);
}
function jr() {
  if (m.SENTRY_RELEASE && m.SENTRY_RELEASE.id) return m.SENTRY_RELEASE.id;
}
function Tn(t4, e) {
  return t4 !== void 0 ? (t4[e[0]] = e[1], t4) : { [e[0]]: e[1] };
}
function xn(t4, e) {
  return t4(e.stack || "", 1);
}
function Gr(t4) {
  let e = t4 && t4.message;
  return e ? e.error && typeof e.error.message == "string" ? e.error.message : e : "No error message";
}
function An(t4, e) {
  let n = { type: e.name || e.constructor.name, value: Gr(e) }, r = xn(t4, e);
  return r.length && (n.stacktrace = { frames: r }), n.type === void 0 && n.value === "" && (n.value = "Unrecoverable error caught"), n;
}
function Hr(t4, e, n, r) {
  let o, i = (r && r.data && $r(r.data) ? r.data.mechanism : void 0) ?? { handled: true, type: "generic" };
  if (F(n)) o = n;
  else {
    if (A(n)) {
      let c = `Non-Error exception captured with keys: ${K(n)}`, u = t4?.getClient(), f = u && u.getOptions().normalizeDepth;
      t4?.setExtra("__serialized__", Y(n, f)), o = r && r.syntheticException || new Error(c), o.message = c;
    } else o = r && r.syntheticException || new Error(n), o.message = n;
    i.synthetic = true;
  }
  let a = { exception: { values: [An(e, o)] } };
  return Q(a, void 0, void 0), B(a, i), { ...a, event_id: r && r.event_id };
}
function qr(t4, e, n = "info", r, o) {
  let s = { event_id: r && r.event_id, level: n, message: e };
  if (o && r && r.syntheticException) {
    let i = xn(t4, r.syntheticException);
    i.length && (s.exception = { values: [{ value: e, stacktrace: { frames: i } }] });
  }
  return s;
}
var zr = 5;
var Yr = (t4 = { limit: zr }) => ({ name: "LinkedErrors", processEvent: (e, n, r) => Jr(r.getOptions().stackParser, t4.limit, e, n) });
function Jr(t4, e, n, r) {
  if (!n.exception || !n.exception.values || !r || !O(r.originalException, Error)) return n;
  let o = bn(t4, e, r.originalException);
  return n.exception.values = [...o, ...n.exception.values], n;
}
function bn(t4, e, n, r = []) {
  if (!O(n.cause, Error) || r.length + 1 >= e) return r;
  let o = An(t4, n.cause);
  return bn(t4, e, n.cause, [o, ...r]);
}
var Wr = { allowedHeaders: ["CF-RAY", "CF-Worker"] };
var Kr = (t4 = {}) => {
  let e = { ...Wr, ...t4 };
  return { name: "RequestData", preprocessEvent: (n) => {
    let { sdkProcessingMetadata: r } = n;
    return r && ("request" in r && r.request instanceof Request && (n.request = Xr(r.request, e), n.user = Vr(n.user ?? {}, r.request, e)), "requestData" in r && (n.request ? n.request.data = r.requestData : n.request = { data: r.requestData })), n;
  } };
};
function Vr(t4, e, n) {
  let r = e.headers.get("CF-Connecting-IP"), { allowedIps: o } = n, s = { ...t4 };
  return !("ip_address" in t4) && r && o !== void 0 && Zr(r, o) && (s.ip_address = r), Object.keys(s).length > 0 ? s : void 0;
}
function Xr(t4, e) {
  let n = t4.headers.get("cookie"), r;
  if (n) try {
    r = Qr(n);
  } catch {
  }
  let o = {};
  for (let [u, f] of t4.headers.entries()) u !== "cookie" && (o[u] = f);
  let s = { method: t4.method, cookies: r, headers: o };
  try {
    let u = new URL(t4.url);
    s.url = `${u.protocol}//${u.hostname}${u.pathname}`, s.query_string = u.search;
  } catch {
    let f = t4.url.indexOf("?");
    f < 0 ? s.url = t4.url : (s.url = t4.url.substr(0, f), s.query_string = t4.url.substr(f + 1));
  }
  let { allowedHeaders: i, allowedCookies: a, allowedSearchParams: c } = e;
  if (i !== void 0 && s.headers ? (s.headers = xt(s.headers, i), Object.keys(s.headers).length === 0 && delete s.headers) : delete s.headers, a !== void 0 && s.cookies ? (s.cookies = xt(s.cookies, a), Object.keys(s.cookies).length === 0 && delete s.cookies) : delete s.cookies, c !== void 0) {
    let u = Object.fromEntries(new URLSearchParams(s.query_string)), f = new URLSearchParams();
    Object.keys(xt(u, c)).forEach((p) => {
      f.set(p, u[p]);
    }), s.query_string = f.toString();
  } else delete s.query_string;
  return s;
}
function Zr(t4, e) {
  return typeof e == "boolean" ? e : e instanceof RegExp ? e.test(t4) : Array.isArray(e) ? e.map((r) => r.toLowerCase()).includes(t4) : false;
}
function xt(t4, e) {
  let n = () => false;
  if (typeof e == "boolean") return e ? t4 : {};
  if (e instanceof RegExp) n = (r) => e.test(r);
  else if (Array.isArray(e)) {
    let r = e.map((o) => o.toLowerCase());
    n = (o) => r.includes(o.toLowerCase());
  } else return {};
  return Object.keys(t4).filter(n).reduce((r, o) => (r[o] = t4[o], r), {});
}
function Qr(t4) {
  if (typeof t4 != "string") return {};
  try {
    return t4.split(";").map((e) => e.split("=")).reduce((e, [n, r]) => (e[decodeURIComponent(n.trim())] = decodeURIComponent(r.trim()), e), {});
  } catch {
    return {};
  }
}
function eo(t4, e) {
  let n = {};
  return t4.forEach((r) => {
    n[r.name] = r, typeof r.setupOnce == "function" && r.setupOnce();
    let o = e.getClient();
    if (o) {
      if (typeof r.setup == "function" && r.setup(o), typeof r.preprocessEvent == "function") {
        let s = r.preprocessEvent.bind(r);
        o.on("preprocessEvent", (i, a) => s(i, a, o));
      }
      if (typeof r.processEvent == "function") {
        let s = r.processEvent.bind(r), i = Object.assign((a, c) => s(a, c, o), { id: r.name });
        o.addEventProcessor(i);
      }
    }
  }), n;
}
var At = class extends ae {
  #e = null;
  #t = false;
  constructor(e) {
    e._metadata = e._metadata || {}, e._metadata.sdk = e._metadata.sdk || { name: "toucan-js", packages: [{ name: "npm:toucan-js", version: "4.0.0" }], version: "4.0.0" }, super(e);
  }
  setupIntegrations() {
    this._isEnabled() && !this.#t && this.#e && (this._integrations = eo(this._options.integrations, this.#e), this.#t = true);
  }
  eventFromException(e, n) {
    return I(Hr(this.#e, this._options.stackParser, e, n));
  }
  eventFromMessage(e, n = "info", r) {
    return I(qr(this._options.stackParser, e, n, r, this._options.attachStacktrace));
  }
  _prepareEvent(e, n, r) {
    return e.platform = e.platform || "javascript", this.getOptions().request && (e.sdkProcessingMetadata = Tn(e.sdkProcessingMetadata, ["request", this.getOptions().request])), this.getOptions().requestData && (e.sdkProcessingMetadata = Tn(e.sdkProcessingMetadata, ["requestData", this.getOptions().requestData])), super._prepareEvent(e, n, r);
  }
  getSdk() {
    return this.#e;
  }
  setSdk(e) {
    this.#e = e;
  }
  setRequestBody(e) {
    this.getOptions().requestData = e;
  }
  setEnabled(e) {
    this.getOptions().enabled = e;
  }
};
function to(t4) {
  let [e, n] = tt(t4);
  return [e, (o) => {
    let s = n(o);
    if (s) {
      let i = s.filename;
      s.abs_path = i !== void 0 && !i.startsWith("/") ? `/${i}` : i, s.in_app = i !== void 0;
    }
    return s;
  }];
}
function no(t4) {
  if (t4) return te(t4, ".js");
}
var ro = ge(to(no));
function oo(t4) {
  function e({ body: n }) {
    try {
      let o = (t4.fetcher ?? fetch)(t4.url, { method: "POST", headers: t4.headers, body: n }).then((s) => ({ statusCode: s.status, headers: { "retry-after": s.headers.get("Retry-After"), "x-sentry-rate-limits": s.headers.get("X-Sentry-Rate-Limits") } }));
      return t4.context && t4.context.waitUntil(o), o;
    } catch (r) {
      return $(r);
    }
  }
  return It(t4, e);
}
var Pe = class t3 extends x {
  #e;
  constructor(e) {
    if (super(), e.defaultIntegrations = e.defaultIntegrations === false ? [] : [...Array.isArray(e.defaultIntegrations) ? e.defaultIntegrations : [Kr(e.requestDataOptions), Yr()]], e.release === void 0) {
      let n = jr();
      n !== void 0 && (e.release = n);
    }
    this.#e = e, this.attachNewClient();
  }
  attachNewClient() {
    let e = new At({ ...this.#e, transport: oo, integrations: St(this.#e), stackParser: We(this.#e.stackParser || ro), transportOptions: { ...this.#e.transportOptions, context: this.#e.context } });
    this.setClient(e), e.setSdk(this), e.setupIntegrations();
  }
  setRequestBody(e) {
    this.getClient()?.setRequestBody(e);
  }
  setEnabled(e) {
    this.getClient()?.setEnabled(e);
  }
  captureCheckIn(e, n, r) {
    return e.status === "in_progress" && this.setContext("monitor", { slug: e.monitorSlug }), this.getClient().captureCheckIn(e, n, r);
  }
  addBreadcrumb(e, n = 100) {
    let o = this.getClient().getOptions().maxBreadcrumbs || n;
    return super.addBreadcrumb(e, o);
  }
  clone() {
    let e = new t3({ ...this.#e });
    return e._breadcrumbs = [...this._breadcrumbs], e._tags = { ...this._tags }, e._extra = { ...this._extra }, e._contexts = { ...this._contexts }, e._user = this._user, e._level = this._level, e._session = this._session, e._transactionName = this._transactionName, e._fingerprint = this._fingerprint, e._eventProcessors = [...this._eventProcessors], e._requestSession = this._requestSession, e._attachments = [...this._attachments], e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }, e._propagationContext = { ...this._propagationContext }, e._lastEventId = this._lastEventId, e;
  }
  withScope(e) {
    let n = this.clone();
    return e(n);
  }
};
function Rn(t4, e, n, r, o, s, i, a, c) {
  if (!(n && r && o)) return;
  let u = new Pe({ dsn: n, request: t4, context: e, sampleRate: 1, release: i?.tag, integrations: [Me({ iteratee(f) {
    return f.filename = "/index.js", f;
  } })], requestDataOptions: { allowedHeaders: ["user-agent", "cf-challenge", "accept-encoding", "accept-language", "cf-ray", "content-length", "content-type", "host"], allowedSearchParams: /(.*)/ }, transportOptions: { headers: { "CF-Access-Client-ID": r, "CF-Access-Client-Secret": o } } });
  return s && (u.setTag("colo", s.coloId), u.setTag("metal", s.metalId)), a && c && (u.setTag("accountId", a), u.setTag("scriptId", c)), u.setUser({ id: a?.toString() }), u;
}
function so() {
  return { addLogs: () => {
  }, setTags: () => {
  }, end: () => {
  }, isRecording: true };
}
function Cn() {
  return { enterSpan: (t4, e, ...n) => e(so(), ...n), getSpanContext: () => ({ traceId: "test-trace", spanId: "test-span", parentSpanId: "test-parent-span", traceFlags: 0 }), runWithSpanContext: (t4, e, ...n) => e(...n), traceId: "test-trace", spanId: "test-span", parentSpanId: "test-parent-span", cfTraceIdHeader: "test-trace:test-span:0" };
}
var we = class {
  constructor(e) {
    this.data = {};
    this.hasWritten = false;
    this.readyAnalytics = e;
  }
  setData(e) {
    this.data = { ...this.data, ...e };
  }
  getData(e) {
    return this.data[e];
  }
  write() {
    this.hasWritten || this.readyAnalytics && (this.hasWritten = true, this.readyAnalytics.logEvent({ version: 1, accountId: this.data.accountId, indexId: this.data.scriptId?.toString(), doubles: [this.data.requestTime ?? -1, this.data.coloId ?? -1, this.data.metalId ?? -1, this.data.coloTier ?? -1, this.data.userWorkerAhead === void 0 ? -1 : Number(this.data.userWorkerAhead)], blobs: [this.data.hostname?.substring(0, 256), this.data.dispatchtype, this.data.error?.substring(0, 256), this.data.version, this.data.coloRegion] }));
  }
};
var On = (t4) => ({ invoke_user_worker_ahead_of_assets: t4?.invoke_user_worker_ahead_of_assets ?? false, has_user_worker: t4?.has_user_worker ?? false, account_id: t4?.account_id ?? -1, script_id: t4?.script_id ?? -1 });
var Bc = { async fetch(t4, e, n) {
  let r, o = false, s = new we(e.ANALYTICS), i = new ue(e.UNSAFE_PERFORMANCE), a = i.now();
  try {
    e.JAEGER || (e.JAEGER = Cn()), r = Rn(t4, n, e.SENTRY_DSN, e.SENTRY_ACCESS_CLIENT_ID, e.SENTRY_ACCESS_CLIENT_SECRET, e.COLO_METADATA, e.VERSION_METADATA, e.CONFIG?.account_id, e.CONFIG?.script_id);
    let c = On(e.CONFIG), u = new URL(t4.url);
    e.COLO_METADATA && e.VERSION_METADATA && e.CONFIG && s.setData({ accountId: e.CONFIG.account_id, scriptId: e.CONFIG.script_id, coloId: e.COLO_METADATA.coloId, metalId: e.COLO_METADATA.metalId, coloTier: e.COLO_METADATA.coloTier, coloRegion: e.COLO_METADATA.coloRegion, hostname: u.hostname, version: e.VERSION_METADATA.tag, userWorkerAhead: c.invoke_user_worker_ahead_of_assets });
    let f = t4.clone();
    if (c.invoke_user_worker_ahead_of_assets) {
      if (!c.has_user_worker) throw new Error("Fetch for user worker without having a user worker binding");
      return s.setData({ dispatchtype: "worker" }), await e.JAEGER.enterSpan("dispatch_worker", async (l) => (l.setTags({ hasUserWorker: true, asset: "ignored", dispatchType: "worker" }), o = true, e.USER_WORKER.fetch(f)));
    }
    let p = await e.ASSET_WORKER.unstable_canFetch(t4);
    return c.has_user_worker && !p ? (s.setData({ dispatchtype: "worker" }), await e.JAEGER.enterSpan("dispatch_worker", async (l) => (l.setTags({ hasUserWorker: c.has_user_worker, asset: p, dispatchType: "worker" }), o = true, e.USER_WORKER.fetch(f)))) : (s.setData({ dispatchtype: "asset" }), await e.JAEGER.enterSpan("dispatch_assets", async (l) => (l.setTags({ hasUserWorker: c.has_user_worker, asset: p, dispatchType: "asset" }), e.ASSET_WORKER.fetch(f))));
  } catch (c) {
    throw o || (c instanceof Error && s.setData({ error: c.message }), r && r.captureException(c)), c;
  } finally {
    s.setData({ requestTime: i.now() - a }), s.write();
  }
} };

// src/asset-workers/router-worker.ts
var router_worker_default = Bc;
export {
  router_worker_default as default
};
